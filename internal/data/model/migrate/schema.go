// Code generated by entc, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/entsql"
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// ActivityColumns holds the columns for the "activity" table.
	ActivityColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true},
		{Name: "create_time", Type: field.TypeTime},
		{Name: "update_time", Type: field.TypeTime},
		{Name: "delete_time", Type: field.TypeTime, Nullable: true},
		{Name: "title", Type: field.TypeString},
		{Name: "description", Type: field.TypeString},
		{Name: "start_time", Type: field.TypeTime},
		{Name: "end_time", Type: field.TypeTime},
		{Name: "remark", Type: field.TypeString},
		{Name: "online", Type: field.TypeInt},
		{Name: "entrance_img", Type: field.TypeString},
		{Name: "internal_top_img", Type: field.TypeString},
		{Name: "name", Type: field.TypeString},
	}
	// ActivityTable holds the schema information for the "activity" table.
	ActivityTable = &schema.Table{
		Name:       "activity",
		Columns:    ActivityColumns,
		PrimaryKey: []*schema.Column{ActivityColumns[0]},
	}
	// BannerColumns holds the columns for the "banner" table.
	BannerColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true},
		{Name: "create_time", Type: field.TypeTime},
		{Name: "update_time", Type: field.TypeTime},
		{Name: "delete_time", Type: field.TypeTime, Nullable: true},
		{Name: "name", Type: field.TypeString},
		{Name: "description", Type: field.TypeString},
		{Name: "title", Type: field.TypeString},
		{Name: "img", Type: field.TypeString},
	}
	// BannerTable holds the schema information for the "banner" table.
	BannerTable = &schema.Table{
		Name:       "banner",
		Columns:    BannerColumns,
		PrimaryKey: []*schema.Column{BannerColumns[0]},
	}
	// BannerItemColumns holds the columns for the "banner_item" table.
	BannerItemColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true},
		{Name: "create_time", Type: field.TypeTime},
		{Name: "update_time", Type: field.TypeTime},
		{Name: "delete_time", Type: field.TypeTime, Nullable: true},
		{Name: "img", Type: field.TypeString},
		{Name: "keyword", Type: field.TypeString},
		{Name: "type", Type: field.TypeInt},
		{Name: "name", Type: field.TypeString},
		{Name: "banner_id", Type: field.TypeInt64, Nullable: true},
	}
	// BannerItemTable holds the schema information for the "banner_item" table.
	BannerItemTable = &schema.Table{
		Name:       "banner_item",
		Columns:    BannerItemColumns,
		PrimaryKey: []*schema.Column{BannerItemColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "banner_item_banner_banner_item",
				Columns:    []*schema.Column{BannerItemColumns[8]},
				RefColumns: []*schema.Column{BannerColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// BrandColumns holds the columns for the "brand" table.
	BrandColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true},
		{Name: "create_time", Type: field.TypeTime},
		{Name: "update_time", Type: field.TypeTime},
		{Name: "delete_time", Type: field.TypeTime, Nullable: true},
		{Name: "name", Type: field.TypeString},
		{Name: "description", Type: field.TypeString},
	}
	// BrandTable holds the schema information for the "brand" table.
	BrandTable = &schema.Table{
		Name:       "brand",
		Columns:    BrandColumns,
		PrimaryKey: []*schema.Column{BrandColumns[0]},
	}
	// CategoryColumns holds the columns for the "category" table.
	CategoryColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true},
		{Name: "create_time", Type: field.TypeTime},
		{Name: "update_time", Type: field.TypeTime},
		{Name: "delete_time", Type: field.TypeTime, Nullable: true},
		{Name: "name", Type: field.TypeString},
		{Name: "description", Type: field.TypeString},
		{Name: "is_root", Type: field.TypeInt},
		{Name: "img", Type: field.TypeString},
		{Name: "index", Type: field.TypeInt},
		{Name: "online", Type: field.TypeInt},
		{Name: "level", Type: field.TypeInt},
		{Name: "parent_id", Type: field.TypeInt64, Nullable: true},
	}
	// CategoryTable holds the schema information for the "category" table.
	CategoryTable = &schema.Table{
		Name:       "category",
		Columns:    CategoryColumns,
		PrimaryKey: []*schema.Column{CategoryColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "category_category_children",
				Columns:    []*schema.Column{CategoryColumns[11]},
				RefColumns: []*schema.Column{CategoryColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// ChargeColumns holds the columns for the "charge" table.
	ChargeColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true},
		{Name: "create_time", Type: field.TypeTime},
		{Name: "update_time", Type: field.TypeTime},
		{Name: "delete_time", Type: field.TypeTime, Nullable: true},
		{Name: "user_id", Type: field.TypeInt64},
		{Name: "amount", Type: field.TypeString},
		{Name: "charge_no", Type: field.TypeString},
		{Name: "transaction_id", Type: field.TypeString},
		{Name: "pay_way", Type: field.TypeInt},
		{Name: "client_type", Type: field.TypeInt},
	}
	// ChargeTable holds the schema information for the "charge" table.
	ChargeTable = &schema.Table{
		Name:       "charge",
		Columns:    ChargeColumns,
		PrimaryKey: []*schema.Column{ChargeColumns[0]},
	}
	// CouponColumns holds the columns for the "coupon" table.
	CouponColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true},
		{Name: "create_time", Type: field.TypeTime},
		{Name: "update_time", Type: field.TypeTime},
		{Name: "delete_time", Type: field.TypeTime, Nullable: true},
		{Name: "title", Type: field.TypeString},
		{Name: "start_time", Type: field.TypeTime},
		{Name: "end_time", Type: field.TypeTime},
		{Name: "description", Type: field.TypeString},
		{Name: "full_money", Type: field.TypeFloat64},
		{Name: "minus", Type: field.TypeFloat64},
		{Name: "rate", Type: field.TypeFloat64},
		{Name: "type", Type: field.TypeInt},
		{Name: "valitiy", Type: field.TypeInt},
		{Name: "activity_id", Type: field.TypeInt64, Nullable: true},
		{Name: "remark", Type: field.TypeString},
		{Name: "whole_store", Type: field.TypeInt},
	}
	// CouponTable holds the schema information for the "coupon" table.
	CouponTable = &schema.Table{
		Name:       "coupon",
		Columns:    CouponColumns,
		PrimaryKey: []*schema.Column{CouponColumns[0]},
	}
	// CouponTemplateColumns holds the columns for the "coupon_template" table.
	CouponTemplateColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true},
		{Name: "create_time", Type: field.TypeTime},
		{Name: "update_time", Type: field.TypeTime},
		{Name: "delete_time", Type: field.TypeTime, Nullable: true},
		{Name: "title", Type: field.TypeString},
		{Name: "description", Type: field.TypeString},
		{Name: "full_money", Type: field.TypeFloat64},
		{Name: "minus", Type: field.TypeFloat64},
		{Name: "discount", Type: field.TypeFloat64},
		{Name: "type", Type: field.TypeInt},
	}
	// CouponTemplateTable holds the schema information for the "coupon_template" table.
	CouponTemplateTable = &schema.Table{
		Name:       "coupon_template",
		Columns:    CouponTemplateColumns,
		PrimaryKey: []*schema.Column{CouponTemplateColumns[0]},
	}
	// CouponTypeColumns holds the columns for the "coupon_type" table.
	CouponTypeColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true},
		{Name: "create_time", Type: field.TypeTime},
		{Name: "update_time", Type: field.TypeTime},
		{Name: "delete_time", Type: field.TypeTime, Nullable: true},
		{Name: "name", Type: field.TypeString},
		{Name: "code", Type: field.TypeInt},
		{Name: "description", Type: field.TypeString},
	}
	// CouponTypeTable holds the schema information for the "coupon_type" table.
	CouponTypeTable = &schema.Table{
		Name:       "coupon_type",
		Columns:    CouponTypeColumns,
		PrimaryKey: []*schema.Column{CouponTypeColumns[0]},
	}
	// GridCategoryColumns holds the columns for the "grid_category" table.
	GridCategoryColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true},
		{Name: "create_time", Type: field.TypeTime},
		{Name: "update_time", Type: field.TypeTime},
		{Name: "delete_time", Type: field.TypeTime, Nullable: true},
		{Name: "title", Type: field.TypeString},
		{Name: "img", Type: field.TypeString},
		{Name: "name", Type: field.TypeString},
		{Name: "category_id", Type: field.TypeInt},
		{Name: "root_category_id", Type: field.TypeInt},
	}
	// GridCategoryTable holds the schema information for the "grid_category" table.
	GridCategoryTable = &schema.Table{
		Name:       "grid_category",
		Columns:    GridCategoryColumns,
		PrimaryKey: []*schema.Column{GridCategoryColumns[0]},
	}
	// OrderColumns holds the columns for the "order" table.
	OrderColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true},
		{Name: "create_time", Type: field.TypeTime},
		{Name: "update_time", Type: field.TypeTime},
		{Name: "delete_time", Type: field.TypeTime, Nullable: true},
		{Name: "order_no", Type: field.TypeString, Size: 64},
		{Name: "transaction_id", Type: field.TypeString},
		{Name: "total_price", Type: field.TypeFloat64},
		{Name: "total_count", Type: field.TypeInt},
		{Name: "final_total_price", Type: field.TypeFloat64},
		{Name: "status", Type: field.TypeInt},
		{Name: "user_id", Type: field.TypeInt64, Nullable: true},
	}
	// OrderTable holds the schema information for the "order" table.
	OrderTable = &schema.Table{
		Name:       "order",
		Columns:    OrderColumns,
		PrimaryKey: []*schema.Column{OrderColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "order_user_order",
				Columns:    []*schema.Column{OrderColumns[10]},
				RefColumns: []*schema.Column{UserColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// OrderDetailColumns holds the columns for the "order_detail" table.
	OrderDetailColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true},
		{Name: "create_time", Type: field.TypeTime},
		{Name: "update_time", Type: field.TypeTime},
		{Name: "delete_time", Type: field.TypeTime, Nullable: true},
		{Name: "user_id", Type: field.TypeInt64},
		{Name: "pay_way", Type: field.TypeInt, Default: 1},
		{Name: "client_type", Type: field.TypeInt, Default: 1},
		{Name: "ship_no", Type: field.TypeString},
	}
	// OrderDetailTable holds the schema information for the "order_detail" table.
	OrderDetailTable = &schema.Table{
		Name:       "order_detail",
		Columns:    OrderDetailColumns,
		PrimaryKey: []*schema.Column{OrderDetailColumns[0]},
	}
	// OrderSnapColumns holds the columns for the "order_snap" table.
	OrderSnapColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true},
		{Name: "snap_img", Type: field.TypeString},
		{Name: "snap_title", Type: field.TypeString},
		{Name: "snap_items", Type: field.TypeString},
		{Name: "snap_address", Type: field.TypeString},
		{Name: "order_id", Type: field.TypeInt64, Nullable: true},
	}
	// OrderSnapTable holds the schema information for the "order_snap" table.
	OrderSnapTable = &schema.Table{
		Name:       "order_snap",
		Columns:    OrderSnapColumns,
		PrimaryKey: []*schema.Column{OrderSnapColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "order_snap_order_order_snap",
				Columns:    []*schema.Column{OrderSnapColumns[5]},
				RefColumns: []*schema.Column{OrderColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// OrderSubColumns holds the columns for the "order_sub" table.
	OrderSubColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true},
		{Name: "create_time", Type: field.TypeTime},
		{Name: "update_time", Type: field.TypeTime},
		{Name: "delete_time", Type: field.TypeTime, Nullable: true},
		{Name: "order_no", Type: field.TypeString},
		{Name: "user_id", Type: field.TypeInt64, Nullable: true},
		{Name: "price", Type: field.TypeFloat64},
		{Name: "count", Type: field.TypeInt},
		{Name: "final_price", Type: field.TypeFloat64},
		{Name: "status", Type: field.TypeInt},
		{Name: "order_id", Type: field.TypeInt64, Nullable: true},
	}
	// OrderSubTable holds the schema information for the "order_sub" table.
	OrderSubTable = &schema.Table{
		Name:       "order_sub",
		Columns:    OrderSubColumns,
		PrimaryKey: []*schema.Column{OrderSubColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "order_sub_order_order_sub",
				Columns:    []*schema.Column{OrderSubColumns[10]},
				RefColumns: []*schema.Column{OrderColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// RefundColumns holds the columns for the "refund" table.
	RefundColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true},
		{Name: "create_time", Type: field.TypeTime},
		{Name: "update_time", Type: field.TypeTime},
		{Name: "delete_time", Type: field.TypeTime, Nullable: true},
		{Name: "refund_no", Type: field.TypeString},
		{Name: "transaction_id", Type: field.TypeString},
		{Name: "reason", Type: field.TypeString},
		{Name: "order_id", Type: field.TypeInt64, Nullable: true},
		{Name: "order_sub_id", Type: field.TypeInt64, Nullable: true},
		{Name: "status", Type: field.TypeInt},
		{Name: "user_id", Type: field.TypeInt64, Nullable: true},
	}
	// RefundTable holds the schema information for the "refund" table.
	RefundTable = &schema.Table{
		Name:       "refund",
		Columns:    RefundColumns,
		PrimaryKey: []*schema.Column{RefundColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "refund_user_refund",
				Columns:    []*schema.Column{RefundColumns[10]},
				RefColumns: []*schema.Column{UserColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// SaleExplainColumns holds the columns for the "sale_explain" table.
	SaleExplainColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true},
		{Name: "create_time", Type: field.TypeTime},
		{Name: "update_time", Type: field.TypeTime},
		{Name: "delete_time", Type: field.TypeTime, Nullable: true},
		{Name: "fixed", Type: field.TypeInt},
		{Name: "text", Type: field.TypeString},
		{Name: "index", Type: field.TypeInt},
		{Name: "replace_id", Type: field.TypeInt64},
		{Name: "spu_id", Type: field.TypeInt64, Nullable: true},
	}
	// SaleExplainTable holds the schema information for the "sale_explain" table.
	SaleExplainTable = &schema.Table{
		Name:       "sale_explain",
		Columns:    SaleExplainColumns,
		PrimaryKey: []*schema.Column{SaleExplainColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "sale_explain_spu_sale_explain",
				Columns:    []*schema.Column{SaleExplainColumns[8]},
				RefColumns: []*schema.Column{SpuColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// SkuColumns holds the columns for the "sku" table.
	SkuColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true},
		{Name: "create_time", Type: field.TypeTime},
		{Name: "update_time", Type: field.TypeTime},
		{Name: "delete_time", Type: field.TypeTime, Nullable: true},
		{Name: "price", Type: field.TypeFloat64},
		{Name: "discount_price", Type: field.TypeFloat64},
		{Name: "online", Type: field.TypeInt},
		{Name: "img", Type: field.TypeString},
		{Name: "title", Type: field.TypeString},
		{Name: "spu_id", Type: field.TypeInt64, Nullable: true},
		{Name: "specs", Type: field.TypeJSON},
		{Name: "code", Type: field.TypeString},
		{Name: "stock", Type: field.TypeInt},
		{Name: "category_id", Type: field.TypeInt64},
		{Name: "root_category_id", Type: field.TypeInt64},
	}
	// SkuTable holds the schema information for the "sku" table.
	SkuTable = &schema.Table{
		Name:       "sku",
		Columns:    SkuColumns,
		PrimaryKey: []*schema.Column{SkuColumns[0]},
	}
	// SkuSpecColumns holds the columns for the "sku_spec" table.
	SkuSpecColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true},
		{Name: "spu_id", Type: field.TypeInt64},
		{Name: "sku_id", Type: field.TypeInt64},
		{Name: "key_id", Type: field.TypeInt64},
		{Name: "value_id", Type: field.TypeInt64},
	}
	// SkuSpecTable holds the schema information for the "sku_spec" table.
	SkuSpecTable = &schema.Table{
		Name:       "sku_spec",
		Columns:    SkuSpecColumns,
		PrimaryKey: []*schema.Column{SkuSpecColumns[0]},
	}
	// SpecKeyColumns holds the columns for the "spec_key" table.
	SpecKeyColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true},
		{Name: "create_time", Type: field.TypeTime},
		{Name: "update_time", Type: field.TypeTime},
		{Name: "delete_time", Type: field.TypeTime, Nullable: true},
		{Name: "name", Type: field.TypeString},
		{Name: "unit", Type: field.TypeString},
		{Name: "standard", Type: field.TypeInt},
		{Name: "description", Type: field.TypeString},
	}
	// SpecKeyTable holds the schema information for the "spec_key" table.
	SpecKeyTable = &schema.Table{
		Name:       "spec_key",
		Columns:    SpecKeyColumns,
		PrimaryKey: []*schema.Column{SpecKeyColumns[0]},
	}
	// SpecValueColumns holds the columns for the "spec_value" table.
	SpecValueColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true},
		{Name: "create_time", Type: field.TypeTime},
		{Name: "update_time", Type: field.TypeTime},
		{Name: "delete_time", Type: field.TypeTime, Nullable: true},
		{Name: "value", Type: field.TypeString},
		{Name: "spec_id", Type: field.TypeInt64},
		{Name: "extend", Type: field.TypeString},
	}
	// SpecValueTable holds the schema information for the "spec_value" table.
	SpecValueTable = &schema.Table{
		Name:       "spec_value",
		Columns:    SpecValueColumns,
		PrimaryKey: []*schema.Column{SpecValueColumns[0]},
	}
	// SpuColumns holds the columns for the "spu" table.
	SpuColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true},
		{Name: "create_time", Type: field.TypeTime},
		{Name: "update_time", Type: field.TypeTime},
		{Name: "delete_time", Type: field.TypeTime, Nullable: true},
		{Name: "title", Type: field.TypeString},
		{Name: "subtitle", Type: field.TypeString},
		{Name: "category_id", Type: field.TypeInt64},
		{Name: "root_category_id", Type: field.TypeInt64},
		{Name: "online", Type: field.TypeInt},
		{Name: "price", Type: field.TypeString},
		{Name: "sketch_spec_id", Type: field.TypeInt},
		{Name: "default_sku_id", Type: field.TypeInt},
		{Name: "img", Type: field.TypeString},
		{Name: "discount_price", Type: field.TypeString},
		{Name: "description", Type: field.TypeString},
		{Name: "tags", Type: field.TypeString},
		{Name: "spu_theme_img", Type: field.TypeString},
		{Name: "for_theme_img", Type: field.TypeString},
	}
	// SpuTable holds the schema information for the "spu" table.
	SpuTable = &schema.Table{
		Name:       "spu",
		Columns:    SpuColumns,
		PrimaryKey: []*schema.Column{SpuColumns[0]},
	}
	// SpuDetailImgColumns holds the columns for the "spu_detail_img" table.
	SpuDetailImgColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true},
		{Name: "create_time", Type: field.TypeTime},
		{Name: "update_time", Type: field.TypeTime},
		{Name: "delete_time", Type: field.TypeTime, Nullable: true},
		{Name: "img", Type: field.TypeString},
		{Name: "index", Type: field.TypeInt},
		{Name: "spu_id", Type: field.TypeInt64, Nullable: true},
	}
	// SpuDetailImgTable holds the schema information for the "spu_detail_img" table.
	SpuDetailImgTable = &schema.Table{
		Name:       "spu_detail_img",
		Columns:    SpuDetailImgColumns,
		PrimaryKey: []*schema.Column{SpuDetailImgColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "spu_detail_img_spu_spu_detail_img",
				Columns:    []*schema.Column{SpuDetailImgColumns[6]},
				RefColumns: []*schema.Column{SpuColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// SpuImgColumns holds the columns for the "spu_img" table.
	SpuImgColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true},
		{Name: "create_time", Type: field.TypeTime},
		{Name: "update_time", Type: field.TypeTime},
		{Name: "delete_time", Type: field.TypeTime, Nullable: true},
		{Name: "img", Type: field.TypeString},
		{Name: "spu_id", Type: field.TypeInt64, Nullable: true},
	}
	// SpuImgTable holds the schema information for the "spu_img" table.
	SpuImgTable = &schema.Table{
		Name:       "spu_img",
		Columns:    SpuImgColumns,
		PrimaryKey: []*schema.Column{SpuImgColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "spu_img_spu_spu_img",
				Columns:    []*schema.Column{SpuImgColumns[5]},
				RefColumns: []*schema.Column{SpuColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// TagColumns holds the columns for the "tag" table.
	TagColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true},
		{Name: "create_time", Type: field.TypeTime},
		{Name: "update_time", Type: field.TypeTime},
		{Name: "delete_time", Type: field.TypeTime, Nullable: true},
		{Name: "title", Type: field.TypeString},
		{Name: "description", Type: field.TypeString},
		{Name: "highlight", Type: field.TypeInt},
		{Name: "type", Type: field.TypeInt},
	}
	// TagTable holds the schema information for the "tag" table.
	TagTable = &schema.Table{
		Name:       "tag",
		Columns:    TagColumns,
		PrimaryKey: []*schema.Column{TagColumns[0]},
	}
	// ThemeColumns holds the columns for the "theme" table.
	ThemeColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true},
		{Name: "create_time", Type: field.TypeTime},
		{Name: "update_time", Type: field.TypeTime},
		{Name: "delete_time", Type: field.TypeTime, Nullable: true},
		{Name: "title", Type: field.TypeString},
		{Name: "description", Type: field.TypeString},
		{Name: "name", Type: field.TypeString},
		{Name: "tpl_name", Type: field.TypeString},
		{Name: "entrance_img", Type: field.TypeString},
		{Name: "extend", Type: field.TypeString},
		{Name: "internal_top_img", Type: field.TypeString},
		{Name: "title_img", Type: field.TypeString},
		{Name: "online", Type: field.TypeInt},
	}
	// ThemeTable holds the schema information for the "theme" table.
	ThemeTable = &schema.Table{
		Name:       "theme",
		Columns:    ThemeColumns,
		PrimaryKey: []*schema.Column{ThemeColumns[0]},
	}
	// UserColumns holds the columns for the "user" table.
	UserColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true},
		{Name: "create_time", Type: field.TypeTime},
		{Name: "update_time", Type: field.TypeTime},
		{Name: "delete_time", Type: field.TypeTime, Nullable: true},
		{Name: "openid", Type: field.TypeString},
		{Name: "email", Type: field.TypeString},
		{Name: "password", Type: field.TypeString},
		{Name: "mobile", Type: field.TypeString},
		{Name: "status", Type: field.TypeInt, Default: 1},
	}
	// UserTable holds the schema information for the "user" table.
	UserTable = &schema.Table{
		Name:       "user",
		Columns:    UserColumns,
		PrimaryKey: []*schema.Column{UserColumns[0]},
	}
	// UserCouponColumns holds the columns for the "user_coupon" table.
	UserCouponColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true},
		{Name: "create_time", Type: field.TypeTime},
		{Name: "update_time", Type: field.TypeTime},
		{Name: "delete_time", Type: field.TypeTime, Nullable: true},
		{Name: "user_id", Type: field.TypeInt64},
		{Name: "coupon_id", Type: field.TypeInt64},
		{Name: "status", Type: field.TypeInt},
		{Name: "order_id", Type: field.TypeInt},
	}
	// UserCouponTable holds the schema information for the "user_coupon" table.
	UserCouponTable = &schema.Table{
		Name:       "user_coupon",
		Columns:    UserCouponColumns,
		PrimaryKey: []*schema.Column{UserCouponColumns[0]},
	}
	// UserFavorColumns holds the columns for the "user_favor" table.
	UserFavorColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true},
		{Name: "create_time", Type: field.TypeTime},
		{Name: "update_time", Type: field.TypeTime},
		{Name: "delete_time", Type: field.TypeTime, Nullable: true},
		{Name: "user_id", Type: field.TypeInt64},
		{Name: "spu_id", Type: field.TypeInt64},
		{Name: "status", Type: field.TypeInt, Default: 1},
	}
	// UserFavorTable holds the schema information for the "user_favor" table.
	UserFavorTable = &schema.Table{
		Name:       "user_favor",
		Columns:    UserFavorColumns,
		PrimaryKey: []*schema.Column{UserFavorColumns[0]},
	}
	// UserInfoColumns holds the columns for the "user_info" table.
	UserInfoColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true},
		{Name: "create_time", Type: field.TypeTime},
		{Name: "update_time", Type: field.TypeTime},
		{Name: "delete_time", Type: field.TypeTime, Nullable: true},
		{Name: "nickname", Type: field.TypeString},
		{Name: "unify_uid", Type: field.TypeInt},
		{Name: "email", Type: field.TypeString},
		{Name: "avatar", Type: field.TypeString},
		{Name: "wx_profile", Type: field.TypeString},
	}
	// UserInfoTable holds the schema information for the "user_info" table.
	UserInfoTable = &schema.Table{
		Name:       "user_info",
		Columns:    UserInfoColumns,
		PrimaryKey: []*schema.Column{UserInfoColumns[0]},
	}
	// UserPointColumns holds the columns for the "user_point" table.
	UserPointColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true},
		{Name: "create_time", Type: field.TypeTime},
		{Name: "update_time", Type: field.TypeTime},
		{Name: "delete_time", Type: field.TypeTime, Nullable: true},
		{Name: "value", Type: field.TypeInt},
		{Name: "status", Type: field.TypeInt},
	}
	// UserPointTable holds the schema information for the "user_point" table.
	UserPointTable = &schema.Table{
		Name:       "user_point",
		Columns:    UserPointColumns,
		PrimaryKey: []*schema.Column{UserPointColumns[0]},
	}
	// UserPointDetailColumns holds the columns for the "user_point_detail" table.
	UserPointDetailColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true},
		{Name: "create_time", Type: field.TypeTime},
		{Name: "update_time", Type: field.TypeTime},
		{Name: "delete_time", Type: field.TypeTime, Nullable: true},
		{Name: "user_id", Type: field.TypeInt64},
		{Name: "value", Type: field.TypeInt},
	}
	// UserPointDetailTable holds the schema information for the "user_point_detail" table.
	UserPointDetailTable = &schema.Table{
		Name:       "user_point_detail",
		Columns:    UserPointDetailColumns,
		PrimaryKey: []*schema.Column{UserPointDetailColumns[0]},
	}
	// UserWalletColumns holds the columns for the "user_wallet" table.
	UserWalletColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true},
		{Name: "create_time", Type: field.TypeTime},
		{Name: "update_time", Type: field.TypeTime},
		{Name: "delete_time", Type: field.TypeTime, Nullable: true},
		{Name: "value", Type: field.TypeInt},
	}
	// UserWalletTable holds the schema information for the "user_wallet" table.
	UserWalletTable = &schema.Table{
		Name:       "user_wallet",
		Columns:    UserWalletColumns,
		PrimaryKey: []*schema.Column{UserWalletColumns[0]},
	}
	// UserWalletDetailColumns holds the columns for the "user_wallet_detail" table.
	UserWalletDetailColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true},
		{Name: "create_time", Type: field.TypeTime},
		{Name: "update_time", Type: field.TypeTime},
		{Name: "delete_time", Type: field.TypeTime, Nullable: true},
		{Name: "description", Type: field.TypeString},
		{Name: "op", Type: field.TypeInt, Default: 1},
		{Name: "current", Type: field.TypeInt},
		{Name: "value", Type: field.TypeInt},
		{Name: "type", Type: field.TypeInt, Default: 1},
	}
	// UserWalletDetailTable holds the schema information for the "user_wallet_detail" table.
	UserWalletDetailTable = &schema.Table{
		Name:       "user_wallet_detail",
		Columns:    UserWalletDetailColumns,
		PrimaryKey: []*schema.Column{UserWalletDetailColumns[0]},
	}
	// ActivitySpuColumns holds the columns for the "activity_spu" table.
	ActivitySpuColumns = []*schema.Column{
		{Name: "activity_id", Type: field.TypeInt},
		{Name: "spu_id", Type: field.TypeInt},
	}
	// ActivitySpuTable holds the schema information for the "activity_spu" table.
	ActivitySpuTable = &schema.Table{
		Name:       "activity_spu",
		Columns:    ActivitySpuColumns,
		PrimaryKey: []*schema.Column{ActivitySpuColumns[0], ActivitySpuColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "activity_spu_activity_id",
				Columns:    []*schema.Column{ActivitySpuColumns[0]},
				RefColumns: []*schema.Column{ActivityColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "activity_spu_spu_id",
				Columns:    []*schema.Column{ActivitySpuColumns[1]},
				RefColumns: []*schema.Column{SpuColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// ActivityCouponColumns holds the columns for the "activity_coupon" table.
	ActivityCouponColumns = []*schema.Column{
		{Name: "activity_id", Type: field.TypeInt},
		{Name: "coupon_id", Type: field.TypeInt},
	}
	// ActivityCouponTable holds the schema information for the "activity_coupon" table.
	ActivityCouponTable = &schema.Table{
		Name:       "activity_coupon",
		Columns:    ActivityCouponColumns,
		PrimaryKey: []*schema.Column{ActivityCouponColumns[0], ActivityCouponColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "activity_coupon_activity_id",
				Columns:    []*schema.Column{ActivityCouponColumns[0]},
				RefColumns: []*schema.Column{ActivityColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "activity_coupon_coupon_id",
				Columns:    []*schema.Column{ActivityCouponColumns[1]},
				RefColumns: []*schema.Column{CouponColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// BrandSpuColumns holds the columns for the "brand_spu" table.
	BrandSpuColumns = []*schema.Column{
		{Name: "brand_id", Type: field.TypeInt},
		{Name: "spu_id", Type: field.TypeInt},
	}
	// BrandSpuTable holds the schema information for the "brand_spu" table.
	BrandSpuTable = &schema.Table{
		Name:       "brand_spu",
		Columns:    BrandSpuColumns,
		PrimaryKey: []*schema.Column{BrandSpuColumns[0], BrandSpuColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "brand_spu_brand_id",
				Columns:    []*schema.Column{BrandSpuColumns[0]},
				RefColumns: []*schema.Column{BrandColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "brand_spu_spu_id",
				Columns:    []*schema.Column{BrandSpuColumns[1]},
				RefColumns: []*schema.Column{SpuColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// CouponCategoryColumns holds the columns for the "coupon_category" table.
	CouponCategoryColumns = []*schema.Column{
		{Name: "coupon_id", Type: field.TypeInt},
		{Name: "category_id", Type: field.TypeInt},
	}
	// CouponCategoryTable holds the schema information for the "coupon_category" table.
	CouponCategoryTable = &schema.Table{
		Name:       "coupon_category",
		Columns:    CouponCategoryColumns,
		PrimaryKey: []*schema.Column{CouponCategoryColumns[0], CouponCategoryColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "coupon_category_coupon_id",
				Columns:    []*schema.Column{CouponCategoryColumns[0]},
				RefColumns: []*schema.Column{CouponColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "coupon_category_category_id",
				Columns:    []*schema.Column{CouponCategoryColumns[1]},
				RefColumns: []*schema.Column{CategoryColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// SpuKeyColumns holds the columns for the "spu_key" table.
	SpuKeyColumns = []*schema.Column{
		{Name: "spu_id", Type: field.TypeInt},
		{Name: "spec_key_id", Type: field.TypeInt},
	}
	// SpuKeyTable holds the schema information for the "spu_key" table.
	SpuKeyTable = &schema.Table{
		Name:       "spu_key",
		Columns:    SpuKeyColumns,
		PrimaryKey: []*schema.Column{SpuKeyColumns[0], SpuKeyColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "spu_key_spu_id",
				Columns:    []*schema.Column{SpuKeyColumns[0]},
				RefColumns: []*schema.Column{SpuColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "spu_key_spec_key_id",
				Columns:    []*schema.Column{SpuKeyColumns[1]},
				RefColumns: []*schema.Column{SpecKeyColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// SpuTagColumns holds the columns for the "spu_tag" table.
	SpuTagColumns = []*schema.Column{
		{Name: "spu_id", Type: field.TypeInt},
		{Name: "tag_id", Type: field.TypeInt},
	}
	// SpuTagTable holds the schema information for the "spu_tag" table.
	SpuTagTable = &schema.Table{
		Name:       "spu_tag",
		Columns:    SpuTagColumns,
		PrimaryKey: []*schema.Column{SpuTagColumns[0], SpuTagColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "spu_tag_spu_id",
				Columns:    []*schema.Column{SpuTagColumns[0]},
				RefColumns: []*schema.Column{SpuColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "spu_tag_tag_id",
				Columns:    []*schema.Column{SpuTagColumns[1]},
				RefColumns: []*schema.Column{TagColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// ThemeSpuColumns holds the columns for the "theme_spu" table.
	ThemeSpuColumns = []*schema.Column{
		{Name: "theme_id", Type: field.TypeInt},
		{Name: "spu_id", Type: field.TypeInt},
	}
	// ThemeSpuTable holds the schema information for the "theme_spu" table.
	ThemeSpuTable = &schema.Table{
		Name:       "theme_spu",
		Columns:    ThemeSpuColumns,
		PrimaryKey: []*schema.Column{ThemeSpuColumns[0], ThemeSpuColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "theme_spu_theme_id",
				Columns:    []*schema.Column{ThemeSpuColumns[0]},
				RefColumns: []*schema.Column{ThemeColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "theme_spu_spu_id",
				Columns:    []*schema.Column{ThemeSpuColumns[1]},
				RefColumns: []*schema.Column{SpuColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		ActivityTable,
		BannerTable,
		BannerItemTable,
		BrandTable,
		CategoryTable,
		ChargeTable,
		CouponTable,
		CouponTemplateTable,
		CouponTypeTable,
		GridCategoryTable,
		OrderTable,
		OrderDetailTable,
		OrderSnapTable,
		OrderSubTable,
		RefundTable,
		SaleExplainTable,
		SkuTable,
		SkuSpecTable,
		SpecKeyTable,
		SpecValueTable,
		SpuTable,
		SpuDetailImgTable,
		SpuImgTable,
		TagTable,
		ThemeTable,
		UserTable,
		UserCouponTable,
		UserFavorTable,
		UserInfoTable,
		UserPointTable,
		UserPointDetailTable,
		UserWalletTable,
		UserWalletDetailTable,
		ActivitySpuTable,
		ActivityCouponTable,
		BrandSpuTable,
		CouponCategoryTable,
		SpuKeyTable,
		SpuTagTable,
		ThemeSpuTable,
	}
)

func init() {
	BannerItemTable.ForeignKeys[0].RefTable = BannerTable
	CategoryTable.ForeignKeys[0].RefTable = CategoryTable
	GridCategoryTable.Annotation = &entsql.Annotation{
		Table: "grid_category",
	}
	OrderTable.ForeignKeys[0].RefTable = UserTable
	OrderSnapTable.ForeignKeys[0].RefTable = OrderTable
	OrderSubTable.ForeignKeys[0].RefTable = OrderTable
	OrderSubTable.Annotation = &entsql.Annotation{
		Table: "order_sub",
	}
	RefundTable.ForeignKeys[0].RefTable = UserTable
	SaleExplainTable.ForeignKeys[0].RefTable = SpuTable
	SkuSpecTable.Annotation = &entsql.Annotation{
		Table: "sku_spec",
	}
	SpuDetailImgTable.ForeignKeys[0].RefTable = SpuTable
	SpuDetailImgTable.Annotation = &entsql.Annotation{
		Table: "spu_detail_img",
	}
	SpuImgTable.ForeignKeys[0].RefTable = SpuTable
	ThemeTable.Annotation = &entsql.Annotation{
		Table: "theme",
	}
	UserTable.Annotation = &entsql.Annotation{
		Table: "user",
	}
	UserCouponTable.Annotation = &entsql.Annotation{
		Table: "user_coupon",
	}
	UserFavorTable.Annotation = &entsql.Annotation{
		Table: "user_favor",
	}
	UserInfoTable.Annotation = &entsql.Annotation{
		Table: "user_info",
	}
	UserPointDetailTable.Annotation = &entsql.Annotation{
		Table: "user_point_detail",
	}
	ActivitySpuTable.ForeignKeys[0].RefTable = ActivityTable
	ActivitySpuTable.ForeignKeys[1].RefTable = SpuTable
	ActivityCouponTable.ForeignKeys[0].RefTable = ActivityTable
	ActivityCouponTable.ForeignKeys[1].RefTable = CouponTable
	BrandSpuTable.ForeignKeys[0].RefTable = BrandTable
	BrandSpuTable.ForeignKeys[1].RefTable = SpuTable
	CouponCategoryTable.ForeignKeys[0].RefTable = CouponTable
	CouponCategoryTable.ForeignKeys[1].RefTable = CategoryTable
	SpuKeyTable.ForeignKeys[0].RefTable = SpuTable
	SpuKeyTable.ForeignKeys[1].RefTable = SpecKeyTable
	SpuTagTable.ForeignKeys[0].RefTable = SpuTable
	SpuTagTable.ForeignKeys[1].RefTable = TagTable
	ThemeSpuTable.ForeignKeys[0].RefTable = ThemeTable
	ThemeSpuTable.ForeignKeys[1].RefTable = SpuTable
}
