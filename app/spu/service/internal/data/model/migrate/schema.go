// Code generated by entc, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/entsql"
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// BrandColumns holds the columns for the "brand" table.
	BrandColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true},
		{Name: "create_time", Type: field.TypeTime},
		{Name: "update_time", Type: field.TypeTime},
		{Name: "delete_time", Type: field.TypeTime, Nullable: true},
		{Name: "name", Type: field.TypeString},
		{Name: "description", Type: field.TypeString},
	}
	// BrandTable holds the schema information for the "brand" table.
	BrandTable = &schema.Table{
		Name:       "brand",
		Columns:    BrandColumns,
		PrimaryKey: []*schema.Column{BrandColumns[0]},
	}
	// SaleExplainColumns holds the columns for the "sale_explain" table.
	SaleExplainColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true},
		{Name: "create_time", Type: field.TypeTime},
		{Name: "update_time", Type: field.TypeTime},
		{Name: "delete_time", Type: field.TypeTime, Nullable: true},
		{Name: "fixed", Type: field.TypeInt},
		{Name: "text", Type: field.TypeString},
		{Name: "index", Type: field.TypeInt},
		{Name: "replace_id", Type: field.TypeInt64},
		{Name: "spu_id", Type: field.TypeInt64, Nullable: true},
	}
	// SaleExplainTable holds the schema information for the "sale_explain" table.
	SaleExplainTable = &schema.Table{
		Name:       "sale_explain",
		Columns:    SaleExplainColumns,
		PrimaryKey: []*schema.Column{SaleExplainColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "sale_explain_spu_sale_explain",
				Columns:    []*schema.Column{SaleExplainColumns[8]},
				RefColumns: []*schema.Column{SpuColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// SkuColumns holds the columns for the "sku" table.
	SkuColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true},
		{Name: "create_time", Type: field.TypeTime},
		{Name: "update_time", Type: field.TypeTime},
		{Name: "delete_time", Type: field.TypeTime, Nullable: true},
		{Name: "price", Type: field.TypeFloat64},
		{Name: "discount_price", Type: field.TypeFloat64},
		{Name: "online", Type: field.TypeInt},
		{Name: "img", Type: field.TypeString},
		{Name: "title", Type: field.TypeString},
		{Name: "spu_id", Type: field.TypeInt64, Nullable: true},
		{Name: "specs", Type: field.TypeJSON},
		{Name: "code", Type: field.TypeString},
		{Name: "stock", Type: field.TypeInt},
		{Name: "category_id", Type: field.TypeInt64},
		{Name: "root_category_id", Type: field.TypeInt64},
	}
	// SkuTable holds the schema information for the "sku" table.
	SkuTable = &schema.Table{
		Name:       "sku",
		Columns:    SkuColumns,
		PrimaryKey: []*schema.Column{SkuColumns[0]},
	}
	// SkuSpecColumns holds the columns for the "sku_spec" table.
	SkuSpecColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true},
		{Name: "spu_id", Type: field.TypeInt64},
		{Name: "sku_id", Type: field.TypeInt64},
		{Name: "key_id", Type: field.TypeInt64},
		{Name: "value_id", Type: field.TypeInt64},
	}
	// SkuSpecTable holds the schema information for the "sku_spec" table.
	SkuSpecTable = &schema.Table{
		Name:       "sku_spec",
		Columns:    SkuSpecColumns,
		PrimaryKey: []*schema.Column{SkuSpecColumns[0]},
	}
	// SpecKeyColumns holds the columns for the "spec_key" table.
	SpecKeyColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true},
		{Name: "create_time", Type: field.TypeTime},
		{Name: "update_time", Type: field.TypeTime},
		{Name: "delete_time", Type: field.TypeTime, Nullable: true},
		{Name: "name", Type: field.TypeString},
		{Name: "unit", Type: field.TypeString},
		{Name: "standard", Type: field.TypeInt},
		{Name: "description", Type: field.TypeString},
	}
	// SpecKeyTable holds the schema information for the "spec_key" table.
	SpecKeyTable = &schema.Table{
		Name:       "spec_key",
		Columns:    SpecKeyColumns,
		PrimaryKey: []*schema.Column{SpecKeyColumns[0]},
	}
	// SpecValueColumns holds the columns for the "spec_value" table.
	SpecValueColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true},
		{Name: "create_time", Type: field.TypeTime},
		{Name: "update_time", Type: field.TypeTime},
		{Name: "delete_time", Type: field.TypeTime, Nullable: true},
		{Name: "value", Type: field.TypeString},
		{Name: "spec_id", Type: field.TypeInt64},
		{Name: "extend", Type: field.TypeString},
	}
	// SpecValueTable holds the schema information for the "spec_value" table.
	SpecValueTable = &schema.Table{
		Name:       "spec_value",
		Columns:    SpecValueColumns,
		PrimaryKey: []*schema.Column{SpecValueColumns[0]},
	}
	// SpuColumns holds the columns for the "spu" table.
	SpuColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true},
		{Name: "create_time", Type: field.TypeTime},
		{Name: "update_time", Type: field.TypeTime},
		{Name: "delete_time", Type: field.TypeTime, Nullable: true},
		{Name: "title", Type: field.TypeString},
		{Name: "subtitle", Type: field.TypeString},
		{Name: "category_id", Type: field.TypeInt64},
		{Name: "root_category_id", Type: field.TypeInt64},
		{Name: "online", Type: field.TypeInt},
		{Name: "price", Type: field.TypeString},
		{Name: "sketch_spec_id", Type: field.TypeInt},
		{Name: "default_sku_id", Type: field.TypeInt},
		{Name: "img", Type: field.TypeString},
		{Name: "discount_price", Type: field.TypeString},
		{Name: "description", Type: field.TypeString},
		{Name: "tags", Type: field.TypeString},
		{Name: "spu_theme_img", Type: field.TypeString},
		{Name: "for_theme_img", Type: field.TypeString},
		{Name: "brand_spu", Type: field.TypeInt64, Nullable: true},
	}
	// SpuTable holds the schema information for the "spu" table.
	SpuTable = &schema.Table{
		Name:       "spu",
		Columns:    SpuColumns,
		PrimaryKey: []*schema.Column{SpuColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "spu_brand_spu",
				Columns:    []*schema.Column{SpuColumns[18]},
				RefColumns: []*schema.Column{BrandColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// SpuDetailImgColumns holds the columns for the "spu_detail_img" table.
	SpuDetailImgColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true},
		{Name: "create_time", Type: field.TypeTime},
		{Name: "update_time", Type: field.TypeTime},
		{Name: "delete_time", Type: field.TypeTime, Nullable: true},
		{Name: "img", Type: field.TypeString},
		{Name: "index", Type: field.TypeInt},
		{Name: "spu_id", Type: field.TypeInt64, Nullable: true},
	}
	// SpuDetailImgTable holds the schema information for the "spu_detail_img" table.
	SpuDetailImgTable = &schema.Table{
		Name:       "spu_detail_img",
		Columns:    SpuDetailImgColumns,
		PrimaryKey: []*schema.Column{SpuDetailImgColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "spu_detail_img_spu_spu_detail_img",
				Columns:    []*schema.Column{SpuDetailImgColumns[6]},
				RefColumns: []*schema.Column{SpuColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// SpuImgColumns holds the columns for the "spu_img" table.
	SpuImgColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true},
		{Name: "create_time", Type: field.TypeTime},
		{Name: "update_time", Type: field.TypeTime},
		{Name: "delete_time", Type: field.TypeTime, Nullable: true},
		{Name: "img", Type: field.TypeString},
		{Name: "spu_id", Type: field.TypeInt64, Nullable: true},
	}
	// SpuImgTable holds the schema information for the "spu_img" table.
	SpuImgTable = &schema.Table{
		Name:       "spu_img",
		Columns:    SpuImgColumns,
		PrimaryKey: []*schema.Column{SpuImgColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "spu_img_spu_spu_img",
				Columns:    []*schema.Column{SpuImgColumns[5]},
				RefColumns: []*schema.Column{SpuColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// TagColumns holds the columns for the "tag" table.
	TagColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true},
		{Name: "create_time", Type: field.TypeTime},
		{Name: "update_time", Type: field.TypeTime},
		{Name: "delete_time", Type: field.TypeTime, Nullable: true},
		{Name: "title", Type: field.TypeString},
		{Name: "description", Type: field.TypeString},
		{Name: "highlight", Type: field.TypeInt},
		{Name: "type", Type: field.TypeInt},
	}
	// TagTable holds the schema information for the "tag" table.
	TagTable = &schema.Table{
		Name:       "tag",
		Columns:    TagColumns,
		PrimaryKey: []*schema.Column{TagColumns[0]},
	}
	// UserFavorColumns holds the columns for the "user_favor" table.
	UserFavorColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true},
		{Name: "create_time", Type: field.TypeTime},
		{Name: "update_time", Type: field.TypeTime},
		{Name: "delete_time", Type: field.TypeTime, Nullable: true},
		{Name: "user_id", Type: field.TypeInt64},
		{Name: "spu_id", Type: field.TypeInt64},
		{Name: "status", Type: field.TypeInt, Default: 1},
	}
	// UserFavorTable holds the schema information for the "user_favor" table.
	UserFavorTable = &schema.Table{
		Name:       "user_favor",
		Columns:    UserFavorColumns,
		PrimaryKey: []*schema.Column{UserFavorColumns[0]},
	}
	// SpuKeyColumns holds the columns for the "spu_key" table.
	SpuKeyColumns = []*schema.Column{
		{Name: "spu_id", Type: field.TypeInt},
		{Name: "spec_key_id", Type: field.TypeInt},
	}
	// SpuKeyTable holds the schema information for the "spu_key" table.
	SpuKeyTable = &schema.Table{
		Name:       "spu_key",
		Columns:    SpuKeyColumns,
		PrimaryKey: []*schema.Column{SpuKeyColumns[0], SpuKeyColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "spu_key_spu_id",
				Columns:    []*schema.Column{SpuKeyColumns[0]},
				RefColumns: []*schema.Column{SpuColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "spu_key_spec_key_id",
				Columns:    []*schema.Column{SpuKeyColumns[1]},
				RefColumns: []*schema.Column{SpecKeyColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// SpuTagColumns holds the columns for the "spu_tag" table.
	SpuTagColumns = []*schema.Column{
		{Name: "spu_id", Type: field.TypeInt},
		{Name: "tag_id", Type: field.TypeInt},
	}
	// SpuTagTable holds the schema information for the "spu_tag" table.
	SpuTagTable = &schema.Table{
		Name:       "spu_tag",
		Columns:    SpuTagColumns,
		PrimaryKey: []*schema.Column{SpuTagColumns[0], SpuTagColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "spu_tag_spu_id",
				Columns:    []*schema.Column{SpuTagColumns[0]},
				RefColumns: []*schema.Column{SpuColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "spu_tag_tag_id",
				Columns:    []*schema.Column{SpuTagColumns[1]},
				RefColumns: []*schema.Column{TagColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		BrandTable,
		SaleExplainTable,
		SkuTable,
		SkuSpecTable,
		SpecKeyTable,
		SpecValueTable,
		SpuTable,
		SpuDetailImgTable,
		SpuImgTable,
		TagTable,
		UserFavorTable,
		SpuKeyTable,
		SpuTagTable,
	}
)

func init() {
	SaleExplainTable.ForeignKeys[0].RefTable = SpuTable
	SpuTable.ForeignKeys[0].RefTable = BrandTable
	SpuDetailImgTable.ForeignKeys[0].RefTable = SpuTable
	SpuDetailImgTable.Annotation = &entsql.Annotation{
		Table: "spu_detail_img",
	}
	SpuImgTable.ForeignKeys[0].RefTable = SpuTable
	UserFavorTable.Annotation = &entsql.Annotation{
		Table: "user_favor",
	}
	SpuKeyTable.ForeignKeys[0].RefTable = SpuTable
	SpuKeyTable.ForeignKeys[1].RefTable = SpecKeyTable
	SpuTagTable.ForeignKeys[0].RefTable = SpuTable
	SpuTagTable.ForeignKeys[1].RefTable = TagTable
}
