// Code generated by entc, DO NOT EDIT.

package spu

import (
	"time"
)

const (
	// Label holds the string label denoting the spu type in the database.
	Label = "spu"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldCreateTime holds the string denoting the create_time field in the database.
	FieldCreateTime = "create_time"
	// FieldUpdateTime holds the string denoting the update_time field in the database.
	FieldUpdateTime = "update_time"
	// FieldDeleteTime holds the string denoting the delete_time field in the database.
	FieldDeleteTime = "delete_time"
	// FieldTitle holds the string denoting the title field in the database.
	FieldTitle = "title"
	// FieldSubtitle holds the string denoting the subtitle field in the database.
	FieldSubtitle = "subtitle"
	// FieldCategoryID holds the string denoting the category_id field in the database.
	FieldCategoryID = "category_id"
	// FieldRootCategoryID holds the string denoting the root_category_id field in the database.
	FieldRootCategoryID = "root_category_id"
	// FieldOnline holds the string denoting the online field in the database.
	FieldOnline = "online"
	// FieldPrice holds the string denoting the price field in the database.
	FieldPrice = "price"
	// FieldSketchSpecID holds the string denoting the sketch_spec_id field in the database.
	FieldSketchSpecID = "sketch_spec_id"
	// FieldDefaultSkuID holds the string denoting the default_sku_id field in the database.
	FieldDefaultSkuID = "default_sku_id"
	// FieldImg holds the string denoting the img field in the database.
	FieldImg = "img"
	// FieldDiscountPrice holds the string denoting the discount_price field in the database.
	FieldDiscountPrice = "discount_price"
	// FieldDescription holds the string denoting the description field in the database.
	FieldDescription = "description"
	// FieldTags holds the string denoting the tags field in the database.
	FieldTags = "tags"
	// FieldSpuThemeImg holds the string denoting the spu_theme_img field in the database.
	FieldSpuThemeImg = "spu_theme_img"
	// FieldForThemeImg holds the string denoting the for_theme_img field in the database.
	FieldForThemeImg = "for_theme_img"
	// EdgeSaleExplain holds the string denoting the sale_explain edge name in mutations.
	EdgeSaleExplain = "sale_explain"
	// EdgeSpuImg holds the string denoting the spu_img edge name in mutations.
	EdgeSpuImg = "spu_img"
	// EdgeSpuDetailImg holds the string denoting the spu_detail_img edge name in mutations.
	EdgeSpuDetailImg = "spu_detail_img"
	// EdgeSpecKey holds the string denoting the spec_key edge name in mutations.
	EdgeSpecKey = "spec_key"
	// EdgeTag holds the string denoting the tag edge name in mutations.
	EdgeTag = "tag"
	// Table holds the table name of the spu in the database.
	Table = "spu"
	// SaleExplainTable is the table that holds the sale_explain relation/edge.
	SaleExplainTable = "sale_explain"
	// SaleExplainInverseTable is the table name for the SaleExplain entity.
	// It exists in this package in order to avoid lower111 circular dependency with the "saleexplain" package.
	SaleExplainInverseTable = "sale_explain"
	// SaleExplainColumn is the table column denoting the sale_explain relation/edge.
	SaleExplainColumn = "spu_id"
	// SpuImgTable is the table that holds the spu_img relation/edge.
	SpuImgTable = "spu_img"
	// SpuImgInverseTable is the table name for the SpuImg entity.
	// It exists in this package in order to avoid lower111 circular dependency with the "spuimg" package.
	SpuImgInverseTable = "spu_img"
	// SpuImgColumn is the table column denoting the spu_img relation/edge.
	SpuImgColumn = "spu_id"
	// SpuDetailImgTable is the table that holds the spu_detail_img relation/edge.
	SpuDetailImgTable = "spu_detail_img"
	// SpuDetailImgInverseTable is the table name for the SpuDetailImg entity.
	// It exists in this package in order to avoid lower111 circular dependency with the "spudetailimg" package.
	SpuDetailImgInverseTable = "spu_detail_img"
	// SpuDetailImgColumn is the table column denoting the spu_detail_img relation/edge.
	SpuDetailImgColumn = "spu_id"
	// SpecKeyTable is the table that holds the spec_key relation/edge. The primary key declared below.
	SpecKeyTable = "spu_key"
	// SpecKeyInverseTable is the table name for the SpecKey entity.
	// It exists in this package in order to avoid lower111 circular dependency with the "speckey" package.
	SpecKeyInverseTable = "spec_key"
	// TagTable is the table that holds the tag relation/edge. The primary key declared below.
	TagTable = "spu_tag"
	// TagInverseTable is the table name for the Tag entity.
	// It exists in this package in order to avoid lower111 circular dependency with the "tag" package.
	TagInverseTable = "tag"
)

// Columns holds all SQL columns for spu fields.
var Columns = []string{
	FieldID,
	FieldCreateTime,
	FieldUpdateTime,
	FieldDeleteTime,
	FieldTitle,
	FieldSubtitle,
	FieldCategoryID,
	FieldRootCategoryID,
	FieldOnline,
	FieldPrice,
	FieldSketchSpecID,
	FieldDefaultSkuID,
	FieldImg,
	FieldDiscountPrice,
	FieldDescription,
	FieldTags,
	FieldSpuThemeImg,
	FieldForThemeImg,
}

// ForeignKeys holds the SQL foreign-keys that are owned by the "spus"
// table and are not defined as standalone fields in the schema.
var ForeignKeys = []string{
	"brand_spu",
}

var (
	// SpecKeyPrimaryKey and SpecKeyColumn2 are the table columns denoting the
	// primary key for the spec_key relation (M2M).
	SpecKeyPrimaryKey = []string{"spu_id", "spec_key_id"}
	// TagPrimaryKey and TagColumn2 are the table columns denoting the
	// primary key for the tag relation (M2M).
	TagPrimaryKey = []string{"spu_id", "tag_id"}
)

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	for i := range ForeignKeys {
		if column == ForeignKeys[i] {
			return true
		}
	}
	return false
}

var (
	// DefaultCreateTime holds the default value on creation for the "create_time" field.
	DefaultCreateTime func() time.Time
	// DefaultUpdateTime holds the default value on creation for the "update_time" field.
	DefaultUpdateTime func() time.Time
	// UpdateDefaultUpdateTime holds the default value on update for the "update_time" field.
	UpdateDefaultUpdateTime func() time.Time
)
