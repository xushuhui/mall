// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package main

import (
	"github.com/go-kratos/kratos/v2"
	"github.com/go-kratos/kratos/v2/log"
	"mall-go/app/mall/interface/internal/biz"
	"mall-go/app/mall/interface/internal/conf"
	"mall-go/app/mall/interface/internal/data"
	"mall-go/app/mall/interface/internal/server"
	"mall-go/app/mall/interface/internal/service"
)

// Injectors from wire.go:

// initApp init kratos application.
func initApp(bootstrap *conf.Bootstrap, registry *conf.Registry, app *conf.App, logger log.Logger) (*kratos.App, func(), error) {
	discovery := data.NewDiscovery(registry)
	appClient := data.NewAppServiceClient(discovery)
	spuClient := data.NewSpuServiceClient(discovery)
	userClient := data.NewUserServiceClient(discovery)
	weappClient := data.NewWeappClient(bootstrap)
	dataData, cleanup, err := data.NewData(appClient, spuClient, userClient, weappClient, logger)
	if err != nil {
		return nil, nil, err
	}
	bannerRepo := data.NewBannerRepo(dataData, logger)
	bannerUsecase := biz.NewBannerUsecase(bannerRepo, logger)
	themeRepo := data.NewThemeRepo(dataData, logger)
	themeUsecase := biz.NewThemeUsecase(themeRepo, logger)
	activityRepo := data.NewActivityRepo(dataData, logger)
	activityUsecase := biz.NewActivityUsecase(activityRepo, logger)
	categoryRepo := data.NewCategoryRepo(dataData, logger)
	categoryUsecase := biz.NewCategoryUsecase(categoryRepo, logger)
	tagRepo := data.NewTagRepo(dataData, logger)
	tagUsecase := biz.NewTagUsecase(tagRepo, logger)
	userRepo := data.NewUserRepo(dataData, logger)
	userUsecase := biz.NewUserUsecase(userRepo, logger, app)
	mallInterface := service.NewMallInterface(logger, bannerUsecase, themeUsecase, activityUsecase, categoryUsecase, tagUsecase, userUsecase)
	httpServer := server.NewHTTPServer(bootstrap, mallInterface, logger)
	grpcServer := server.NewGRPCServer(bootstrap, mallInterface, logger)
	registrar := data.NewRegistrar(registry)
	kratosApp := newApp(logger, httpServer, grpcServer, registrar)
	return kratosApp, func() {
		cleanup()
	}, nil
}
