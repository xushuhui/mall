// Code generated by entc, DO NOT EDIT.

package saleexplain

import (
	"time"
)

const (
	// Label holds the string label denoting the saleexplain type in the database.
	Label = "sale_explain"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldCreateTime holds the string denoting the create_time field in the database.
	FieldCreateTime = "create_time"
	// FieldUpdateTime holds the string denoting the update_time field in the database.
	FieldUpdateTime = "update_time"
	// FieldDeleteTime holds the string denoting the delete_time field in the database.
	FieldDeleteTime = "delete_time"
	// FieldFixed holds the string denoting the fixed field in the database.
	FieldFixed = "fixed"
	// FieldText holds the string denoting the text field in the database.
	FieldText = "text"
	// FieldSpuID holds the string denoting the spu_id field in the database.
	FieldSpuID = "spu_id"
	// FieldIndex holds the string denoting the index field in the database.
	FieldIndex = "index"
	// FieldReplaceID holds the string denoting the replace_id field in the database.
	FieldReplaceID = "replace_id"
	// EdgeSpu holds the string denoting the spu edge name in mutations.
	EdgeSpu = "spu"
	// Table holds the table name of the saleexplain in the database.
	Table = "sale_explain"
	// SpuTable is the table that holds the spu relation/edge.
	SpuTable = "sale_explain"
	// SpuInverseTable is the table name for the Spu entity.
	// It exists in this package in order to avoid lower111 circular dependency with the "spu" package.
	SpuInverseTable = "spu"
	// SpuColumn is the table column denoting the spu relation/edge.
	SpuColumn = "spu_id"
)

// Columns holds all SQL columns for saleexplain fields.
var Columns = []string{
	FieldID,
	FieldCreateTime,
	FieldUpdateTime,
	FieldDeleteTime,
	FieldFixed,
	FieldText,
	FieldSpuID,
	FieldIndex,
	FieldReplaceID,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// DefaultCreateTime holds the default value on creation for the "create_time" field.
	DefaultCreateTime func() time.Time
	// DefaultUpdateTime holds the default value on creation for the "update_time" field.
	DefaultUpdateTime func() time.Time
	// UpdateDefaultUpdateTime holds the default value on update for the "update_time" field.
	UpdateDefaultUpdateTime func() time.Time
)
