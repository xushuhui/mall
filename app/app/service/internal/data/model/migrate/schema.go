// Code generated by entc, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/entsql"
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// ActivityColumns holds the columns for the "activity" table.
	ActivityColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true},
		{Name: "create_time", Type: field.TypeTime},
		{Name: "update_time", Type: field.TypeTime},
		{Name: "delete_time", Type: field.TypeTime, Nullable: true},
		{Name: "title", Type: field.TypeString},
		{Name: "description", Type: field.TypeString},
		{Name: "start_time", Type: field.TypeTime},
		{Name: "end_time", Type: field.TypeTime},
		{Name: "remark", Type: field.TypeString},
		{Name: "online", Type: field.TypeInt},
		{Name: "entrance_img", Type: field.TypeString},
		{Name: "internal_top_img", Type: field.TypeString},
		{Name: "name", Type: field.TypeString},
	}
	// ActivityTable holds the schema information for the "activity" table.
	ActivityTable = &schema.Table{
		Name:       "activity",
		Columns:    ActivityColumns,
		PrimaryKey: []*schema.Column{ActivityColumns[0]},
	}
	// BannerColumns holds the columns for the "banner" table.
	BannerColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true},
		{Name: "create_time", Type: field.TypeTime},
		{Name: "update_time", Type: field.TypeTime},
		{Name: "delete_time", Type: field.TypeTime, Nullable: true},
		{Name: "name", Type: field.TypeString},
		{Name: "description", Type: field.TypeString},
		{Name: "title", Type: field.TypeString},
		{Name: "img", Type: field.TypeString},
	}
	// BannerTable holds the schema information for the "banner" table.
	BannerTable = &schema.Table{
		Name:       "banner",
		Columns:    BannerColumns,
		PrimaryKey: []*schema.Column{BannerColumns[0]},
	}
	// BannerItemColumns holds the columns for the "banner_item" table.
	BannerItemColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true},
		{Name: "create_time", Type: field.TypeTime},
		{Name: "update_time", Type: field.TypeTime},
		{Name: "delete_time", Type: field.TypeTime, Nullable: true},
		{Name: "img", Type: field.TypeString},
		{Name: "keyword", Type: field.TypeString},
		{Name: "type", Type: field.TypeInt},
		{Name: "name", Type: field.TypeString},
		{Name: "banner_id", Type: field.TypeInt64, Nullable: true},
	}
	// BannerItemTable holds the schema information for the "banner_item" table.
	BannerItemTable = &schema.Table{
		Name:       "banner_item",
		Columns:    BannerItemColumns,
		PrimaryKey: []*schema.Column{BannerItemColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "banner_item_banner_banner_item",
				Columns:    []*schema.Column{BannerItemColumns[8]},
				RefColumns: []*schema.Column{BannerColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// CategoryColumns holds the columns for the "category" table.
	CategoryColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true},
		{Name: "create_time", Type: field.TypeTime},
		{Name: "update_time", Type: field.TypeTime},
		{Name: "delete_time", Type: field.TypeTime, Nullable: true},
		{Name: "name", Type: field.TypeString},
		{Name: "description", Type: field.TypeString},
		{Name: "is_root", Type: field.TypeInt},
		{Name: "img", Type: field.TypeString},
		{Name: "index", Type: field.TypeInt},
		{Name: "online", Type: field.TypeInt},
		{Name: "level", Type: field.TypeInt},
		{Name: "parent_id", Type: field.TypeInt64, Nullable: true},
	}
	// CategoryTable holds the schema information for the "category" table.
	CategoryTable = &schema.Table{
		Name:       "category",
		Columns:    CategoryColumns,
		PrimaryKey: []*schema.Column{CategoryColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "category_category_children",
				Columns:    []*schema.Column{CategoryColumns[11]},
				RefColumns: []*schema.Column{CategoryColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// ChargeColumns holds the columns for the "charge" table.
	ChargeColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true},
		{Name: "create_time", Type: field.TypeTime},
		{Name: "update_time", Type: field.TypeTime},
		{Name: "delete_time", Type: field.TypeTime, Nullable: true},
		{Name: "user_id", Type: field.TypeInt64},
		{Name: "amount", Type: field.TypeString},
		{Name: "charge_no", Type: field.TypeString},
		{Name: "transaction_id", Type: field.TypeString},
		{Name: "pay_way", Type: field.TypeInt},
		{Name: "client_type", Type: field.TypeInt},
	}
	// ChargeTable holds the schema information for the "charge" table.
	ChargeTable = &schema.Table{
		Name:       "charge",
		Columns:    ChargeColumns,
		PrimaryKey: []*schema.Column{ChargeColumns[0]},
	}
	// GridCategoryColumns holds the columns for the "grid_category" table.
	GridCategoryColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true},
		{Name: "create_time", Type: field.TypeTime},
		{Name: "update_time", Type: field.TypeTime},
		{Name: "delete_time", Type: field.TypeTime, Nullable: true},
		{Name: "title", Type: field.TypeString},
		{Name: "img", Type: field.TypeString},
		{Name: "name", Type: field.TypeString},
		{Name: "category_id", Type: field.TypeInt},
		{Name: "root_category_id", Type: field.TypeInt},
	}
	// GridCategoryTable holds the schema information for the "grid_category" table.
	GridCategoryTable = &schema.Table{
		Name:       "grid_category",
		Columns:    GridCategoryColumns,
		PrimaryKey: []*schema.Column{GridCategoryColumns[0]},
	}
	// RefundColumns holds the columns for the "refund" table.
	RefundColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true},
		{Name: "create_time", Type: field.TypeTime},
		{Name: "update_time", Type: field.TypeTime},
		{Name: "delete_time", Type: field.TypeTime, Nullable: true},
		{Name: "refund_no", Type: field.TypeString},
		{Name: "transaction_id", Type: field.TypeString},
		{Name: "user_id", Type: field.TypeInt64, Nullable: true},
		{Name: "reason", Type: field.TypeString},
		{Name: "order_id", Type: field.TypeInt64, Nullable: true},
		{Name: "order_sub_id", Type: field.TypeInt64, Nullable: true},
		{Name: "status", Type: field.TypeInt},
	}
	// RefundTable holds the schema information for the "refund" table.
	RefundTable = &schema.Table{
		Name:       "refund",
		Columns:    RefundColumns,
		PrimaryKey: []*schema.Column{RefundColumns[0]},
	}
	// ThemeColumns holds the columns for the "theme" table.
	ThemeColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true},
		{Name: "create_time", Type: field.TypeTime},
		{Name: "update_time", Type: field.TypeTime},
		{Name: "delete_time", Type: field.TypeTime, Nullable: true},
		{Name: "title", Type: field.TypeString},
		{Name: "description", Type: field.TypeString},
		{Name: "name", Type: field.TypeString},
		{Name: "tpl_name", Type: field.TypeString},
		{Name: "entrance_img", Type: field.TypeString},
		{Name: "extend", Type: field.TypeString},
		{Name: "internal_top_img", Type: field.TypeString},
		{Name: "title_img", Type: field.TypeString},
		{Name: "online", Type: field.TypeInt},
	}
	// ThemeTable holds the schema information for the "theme" table.
	ThemeTable = &schema.Table{
		Name:       "theme",
		Columns:    ThemeColumns,
		PrimaryKey: []*schema.Column{ThemeColumns[0]},
	}
	// ThemeSpuColumns holds the columns for the "theme_spu" table.
	ThemeSpuColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true},
		{Name: "spu_id", Type: field.TypeInt64},
		{Name: "theme_id", Type: field.TypeInt64, Nullable: true},
	}
	// ThemeSpuTable holds the schema information for the "theme_spu" table.
	ThemeSpuTable = &schema.Table{
		Name:       "theme_spu",
		Columns:    ThemeSpuColumns,
		PrimaryKey: []*schema.Column{ThemeSpuColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "theme_spu_theme_theme_spu",
				Columns:    []*schema.Column{ThemeSpuColumns[2]},
				RefColumns: []*schema.Column{ThemeColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		ActivityTable,
		BannerTable,
		BannerItemTable,
		CategoryTable,
		ChargeTable,
		GridCategoryTable,
		RefundTable,
		ThemeTable,
		ThemeSpuTable,
	}
)

func init() {
	BannerItemTable.ForeignKeys[0].RefTable = BannerTable
	CategoryTable.ForeignKeys[0].RefTable = CategoryTable
	GridCategoryTable.Annotation = &entsql.Annotation{
		Table: "grid_category",
	}
	ThemeTable.Annotation = &entsql.Annotation{
		Table: "theme",
	}
	ThemeSpuTable.ForeignKeys[0].RefTable = ThemeTable
	ThemeSpuTable.Annotation = &entsql.Annotation{
		Table: "theme_spu",
	}
}
