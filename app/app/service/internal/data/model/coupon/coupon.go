// Code generated by entc, DO NOT EDIT.

package coupon

import (
	"time"
)

const (
	// Label holds the string label denoting the coupon type in the database.
	Label = "coupon"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldCreateTime holds the string denoting the create_time field in the database.
	FieldCreateTime = "create_time"
	// FieldUpdateTime holds the string denoting the update_time field in the database.
	FieldUpdateTime = "update_time"
	// FieldDeleteTime holds the string denoting the delete_time field in the database.
	FieldDeleteTime = "delete_time"
	// FieldTitle holds the string denoting the title field in the database.
	FieldTitle = "title"
	// FieldStartTime holds the string denoting the start_time field in the database.
	FieldStartTime = "start_time"
	// FieldEndTime holds the string denoting the end_time field in the database.
	FieldEndTime = "end_time"
	// FieldDescription holds the string denoting the description field in the database.
	FieldDescription = "description"
	// FieldFullMoney holds the string denoting the full_money field in the database.
	FieldFullMoney = "full_money"
	// FieldMinus holds the string denoting the minus field in the database.
	FieldMinus = "minus"
	// FieldRate holds the string denoting the rate field in the database.
	FieldRate = "rate"
	// FieldType holds the string denoting the type field in the database.
	FieldType = "type"
	// FieldValitiy holds the string denoting the valitiy field in the database.
	FieldValitiy = "valitiy"
	// FieldActivityID holds the string denoting the activity_id field in the database.
	FieldActivityID = "activity_id"
	// FieldRemark holds the string denoting the remark field in the database.
	FieldRemark = "remark"
	// FieldWholeStore holds the string denoting the whole_store field in the database.
	FieldWholeStore = "whole_store"
	// EdgeCategory holds the string denoting the category edge name in mutations.
	EdgeCategory = "category"
	// EdgeActivity holds the string denoting the activity edge name in mutations.
	EdgeActivity = "activity"
	// EdgeUserCoupon holds the string denoting the user_coupon edge name in mutations.
	EdgeUserCoupon = "user_coupon"
	// Table holds the table name of the coupon in the database.
	Table = "coupon"
	// CategoryTable is the table that holds the category relation/edge. The primary key declared below.
	CategoryTable = "coupon_category"
	// CategoryInverseTable is the table name for the Category entity.
	// It exists in this package in order to avoid lower111 circular dependency with the "category" package.
	CategoryInverseTable = "category"
	// ActivityTable is the table that holds the activity relation/edge. The primary key declared below.
	ActivityTable = "activity_coupon"
	// ActivityInverseTable is the table name for the Activity entity.
	// It exists in this package in order to avoid lower111 circular dependency with the "activity" package.
	ActivityInverseTable = "activity"
	// UserCouponTable is the table that holds the user_coupon relation/edge.
	UserCouponTable = "user_coupon"
	// UserCouponInverseTable is the table name for the UserCoupon entity.
	// It exists in this package in order to avoid lower111 circular dependency with the "usercoupon" package.
	UserCouponInverseTable = "user_coupon"
	// UserCouponColumn is the table column denoting the user_coupon relation/edge.
	UserCouponColumn = "coupon_id"
)

// Columns holds all SQL columns for coupon fields.
var Columns = []string{
	FieldID,
	FieldCreateTime,
	FieldUpdateTime,
	FieldDeleteTime,
	FieldTitle,
	FieldStartTime,
	FieldEndTime,
	FieldDescription,
	FieldFullMoney,
	FieldMinus,
	FieldRate,
	FieldType,
	FieldValitiy,
	FieldActivityID,
	FieldRemark,
	FieldWholeStore,
}

var (
	// CategoryPrimaryKey and CategoryColumn2 are the table columns denoting the
	// primary key for the category relation (M2M).
	CategoryPrimaryKey = []string{"coupon_id", "category_id"}
	// ActivityPrimaryKey and ActivityColumn2 are the table columns denoting the
	// primary key for the activity relation (M2M).
	ActivityPrimaryKey = []string{"activity_id", "coupon_id"}
)

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// DefaultCreateTime holds the default value on creation for the "create_time" field.
	DefaultCreateTime func() time.Time
	// DefaultUpdateTime holds the default value on creation for the "update_time" field.
	DefaultUpdateTime func() time.Time
	// UpdateDefaultUpdateTime holds the default value on update for the "update_time" field.
	UpdateDefaultUpdateTime func() time.Time
)
