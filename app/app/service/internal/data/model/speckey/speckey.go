// Code generated by entc, DO NOT EDIT.

package speckey

import (
	"time"
)

const (
	// Label holds the string label denoting the speckey type in the database.
	Label = "spec_key"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldCreateTime holds the string denoting the create_time field in the database.
	FieldCreateTime = "create_time"
	// FieldUpdateTime holds the string denoting the update_time field in the database.
	FieldUpdateTime = "update_time"
	// FieldDeleteTime holds the string denoting the delete_time field in the database.
	FieldDeleteTime = "delete_time"
	// FieldName holds the string denoting the name field in the database.
	FieldName = "name"
	// FieldUnit holds the string denoting the unit field in the database.
	FieldUnit = "unit"
	// FieldStandard holds the string denoting the standard field in the database.
	FieldStandard = "standard"
	// FieldDescription holds the string denoting the description field in the database.
	FieldDescription = "description"
	// EdgeSpu holds the string denoting the spu edge name in mutations.
	EdgeSpu = "spu"
	// Table holds the table name of the speckey in the database.
	Table = "spec_key"
	// SpuTable is the table that holds the spu relation/edge. The primary key declared below.
	SpuTable = "spu_key"
	// SpuInverseTable is the table name for the Spu entity.
	// It exists in this package in order to avoid circular dependency with the "spu" package.
	SpuInverseTable = "spu"
)

// Columns holds all SQL columns for speckey fields.
var Columns = []string{
	FieldID,
	FieldCreateTime,
	FieldUpdateTime,
	FieldDeleteTime,
	FieldName,
	FieldUnit,
	FieldStandard,
	FieldDescription,
}

var (
	// SpuPrimaryKey and SpuColumn2 are the table columns denoting the
	// primary key for the spu relation (M2M).
	SpuPrimaryKey = []string{"spu_id", "spec_key_id"}
)

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// DefaultCreateTime holds the default value on creation for the "create_time" field.
	DefaultCreateTime func() time.Time
	// DefaultUpdateTime holds the default value on creation for the "update_time" field.
	DefaultUpdateTime func() time.Time
	// UpdateDefaultUpdateTime holds the default value on update for the "update_time" field.
	UpdateDefaultUpdateTime func() time.Time
)
