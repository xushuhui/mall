// Code generated by entc, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/entsql"
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// UserColumns holds the columns for the "user" table.
	UserColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true},
		{Name: "create_time", Type: field.TypeTime},
		{Name: "update_time", Type: field.TypeTime},
		{Name: "delete_time", Type: field.TypeTime, Nullable: true},
		{Name: "openid", Type: field.TypeString},
		{Name: "email", Type: field.TypeString},
		{Name: "password", Type: field.TypeString},
		{Name: "mobile", Type: field.TypeString},
		{Name: "status", Type: field.TypeInt, Default: 1},
	}
	// UserTable holds the schema information for the "user" table.
	UserTable = &schema.Table{
		Name:       "user",
		Columns:    UserColumns,
		PrimaryKey: []*schema.Column{UserColumns[0]},
	}
	// UserCouponColumns holds the columns for the "user_coupon" table.
	UserCouponColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true},
		{Name: "create_time", Type: field.TypeTime},
		{Name: "update_time", Type: field.TypeTime},
		{Name: "delete_time", Type: field.TypeTime, Nullable: true},
		{Name: "user_id", Type: field.TypeInt64},
		{Name: "coupon_id", Type: field.TypeInt64, Nullable: true},
		{Name: "status", Type: field.TypeInt, Default: 1},
		{Name: "order_id", Type: field.TypeInt},
	}
	// UserCouponTable holds the schema information for the "user_coupon" table.
	UserCouponTable = &schema.Table{
		Name:       "user_coupon",
		Columns:    UserCouponColumns,
		PrimaryKey: []*schema.Column{UserCouponColumns[0]},
	}
	// UserFavorColumns holds the columns for the "user_favor" table.
	UserFavorColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true},
		{Name: "create_time", Type: field.TypeTime},
		{Name: "update_time", Type: field.TypeTime},
		{Name: "delete_time", Type: field.TypeTime, Nullable: true},
		{Name: "user_id", Type: field.TypeInt64},
		{Name: "spu_id", Type: field.TypeInt64},
		{Name: "status", Type: field.TypeInt, Default: 1},
	}
	// UserFavorTable holds the schema information for the "user_favor" table.
	UserFavorTable = &schema.Table{
		Name:       "user_favor",
		Columns:    UserFavorColumns,
		PrimaryKey: []*schema.Column{UserFavorColumns[0]},
	}
	// UserInfoColumns holds the columns for the "user_info" table.
	UserInfoColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true},
		{Name: "create_time", Type: field.TypeTime},
		{Name: "update_time", Type: field.TypeTime},
		{Name: "delete_time", Type: field.TypeTime, Nullable: true},
		{Name: "nickname", Type: field.TypeString},
		{Name: "unify_uid", Type: field.TypeInt},
		{Name: "email", Type: field.TypeString},
		{Name: "avatar", Type: field.TypeString},
		{Name: "wx_profile", Type: field.TypeString},
	}
	// UserInfoTable holds the schema information for the "user_info" table.
	UserInfoTable = &schema.Table{
		Name:       "user_info",
		Columns:    UserInfoColumns,
		PrimaryKey: []*schema.Column{UserInfoColumns[0]},
	}
	// UserPointsColumns holds the columns for the "user_points" table.
	UserPointsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true},
		{Name: "create_time", Type: field.TypeTime},
		{Name: "update_time", Type: field.TypeTime},
		{Name: "delete_time", Type: field.TypeTime, Nullable: true},
		{Name: "value", Type: field.TypeInt},
		{Name: "status", Type: field.TypeInt},
	}
	// UserPointsTable holds the schema information for the "user_points" table.
	UserPointsTable = &schema.Table{
		Name:       "user_points",
		Columns:    UserPointsColumns,
		PrimaryKey: []*schema.Column{UserPointsColumns[0]},
	}
	// UserPointDetailColumns holds the columns for the "user_point_detail" table.
	UserPointDetailColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true},
		{Name: "create_time", Type: field.TypeTime},
		{Name: "update_time", Type: field.TypeTime},
		{Name: "delete_time", Type: field.TypeTime, Nullable: true},
		{Name: "user_id", Type: field.TypeInt64},
		{Name: "value", Type: field.TypeInt},
	}
	// UserPointDetailTable holds the schema information for the "user_point_detail" table.
	UserPointDetailTable = &schema.Table{
		Name:       "user_point_detail",
		Columns:    UserPointDetailColumns,
		PrimaryKey: []*schema.Column{UserPointDetailColumns[0]},
	}
	// UserWalletsColumns holds the columns for the "user_wallets" table.
	UserWalletsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true},
		{Name: "create_time", Type: field.TypeTime},
		{Name: "update_time", Type: field.TypeTime},
		{Name: "delete_time", Type: field.TypeTime, Nullable: true},
		{Name: "value", Type: field.TypeInt},
	}
	// UserWalletsTable holds the schema information for the "user_wallets" table.
	UserWalletsTable = &schema.Table{
		Name:       "user_wallets",
		Columns:    UserWalletsColumns,
		PrimaryKey: []*schema.Column{UserWalletsColumns[0]},
	}
	// UserWalletDetailsColumns holds the columns for the "user_wallet_details" table.
	UserWalletDetailsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true},
		{Name: "create_time", Type: field.TypeTime},
		{Name: "update_time", Type: field.TypeTime},
		{Name: "delete_time", Type: field.TypeTime, Nullable: true},
		{Name: "description", Type: field.TypeString},
		{Name: "op", Type: field.TypeInt, Default: 1},
		{Name: "current", Type: field.TypeInt},
		{Name: "value", Type: field.TypeInt},
		{Name: "type", Type: field.TypeInt, Default: 1},
	}
	// UserWalletDetailsTable holds the schema information for the "user_wallet_details" table.
	UserWalletDetailsTable = &schema.Table{
		Name:       "user_wallet_details",
		Columns:    UserWalletDetailsColumns,
		PrimaryKey: []*schema.Column{UserWalletDetailsColumns[0]},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		UserTable,
		UserCouponTable,
		UserFavorTable,
		UserInfoTable,
		UserPointsTable,
		UserPointDetailTable,
		UserWalletsTable,
		UserWalletDetailsTable,
	}
)

func init() {
	UserTable.Annotation = &entsql.Annotation{
		Table: "user",
	}
	UserCouponTable.Annotation = &entsql.Annotation{
		Table: "user_coupon",
	}
	UserFavorTable.Annotation = &entsql.Annotation{
		Table: "user_favor",
	}
	UserInfoTable.Annotation = &entsql.Annotation{
		Table: "user_info",
	}
	UserPointDetailTable.Annotation = &entsql.Annotation{
		Table: "user_point_detail",
	}
}
