// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.17.3
// source: api/mall/app.proto

package mall

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type BannerByIdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *BannerByIdRequest) Reset() {
	*x = BannerByIdRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_mall_app_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BannerByIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BannerByIdRequest) ProtoMessage() {}

func (x *BannerByIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_mall_app_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BannerByIdRequest.ProtoReflect.Descriptor instead.
func (*BannerByIdRequest) Descriptor() ([]byte, []int) {
	return file_api_mall_app_proto_rawDescGZIP(), []int{0}
}

func (x *BannerByIdRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type BannerByNameRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *BannerByNameRequest) Reset() {
	*x = BannerByNameRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_mall_app_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BannerByNameRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BannerByNameRequest) ProtoMessage() {}

func (x *BannerByNameRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_mall_app_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BannerByNameRequest.ProtoReflect.Descriptor instead.
func (*BannerByNameRequest) Descriptor() ([]byte, []int) {
	return file_api_mall_app_proto_rawDescGZIP(), []int{1}
}

func (x *BannerByNameRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type ThemeByNamesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Names string `protobuf:"bytes,1,opt,name=names,proto3" json:"names,omitempty"`
}

func (x *ThemeByNamesRequest) Reset() {
	*x = ThemeByNamesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_mall_app_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ThemeByNamesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ThemeByNamesRequest) ProtoMessage() {}

func (x *ThemeByNamesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_mall_app_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ThemeByNamesRequest.ProtoReflect.Descriptor instead.
func (*ThemeByNamesRequest) Descriptor() ([]byte, []int) {
	return file_api_mall_app_proto_rawDescGZIP(), []int{2}
}

func (x *ThemeByNamesRequest) GetNames() string {
	if x != nil {
		return x.Names
	}
	return ""
}

type ThemeWithSpuRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *ThemeWithSpuRequest) Reset() {
	*x = ThemeWithSpuRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_mall_app_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ThemeWithSpuRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ThemeWithSpuRequest) ProtoMessage() {}

func (x *ThemeWithSpuRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_mall_app_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ThemeWithSpuRequest.ProtoReflect.Descriptor instead.
func (*ThemeWithSpuRequest) Descriptor() ([]byte, []int) {
	return file_api_mall_app_proto_rawDescGZIP(), []int{3}
}

func (x *ThemeWithSpuRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type Themes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Theme []*Theme `protobuf:"bytes,1,rep,name=theme,proto3" json:"theme,omitempty"`
}

func (x *Themes) Reset() {
	*x = Themes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_mall_app_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Themes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Themes) ProtoMessage() {}

func (x *Themes) ProtoReflect() protoreflect.Message {
	mi := &file_api_mall_app_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Themes.ProtoReflect.Descriptor instead.
func (*Themes) Descriptor() ([]byte, []int) {
	return file_api_mall_app_proto_rawDescGZIP(), []int{4}
}

func (x *Themes) GetTheme() []*Theme {
	if x != nil {
		return x.Theme
	}
	return nil
}

type Theme struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Title          string `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Description    string `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	Name           string `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	EntranceImg    string `protobuf:"bytes,5,opt,name=entrance_img,json=entranceImg,proto3" json:"entrance_img,omitempty"`
	InternalTopImg string `protobuf:"bytes,7,opt,name=internal_top_img,json=internalTopImg,proto3" json:"internal_top_img,omitempty"`
	TitleImg       string `protobuf:"bytes,8,opt,name=title_img,json=titleImg,proto3" json:"title_img,omitempty"`
	TplName        string `protobuf:"bytes,9,opt,name=tpl_name,json=tplName,proto3" json:"tpl_name,omitempty"`
	Online         int32  `protobuf:"varint,10,opt,name=online,proto3" json:"online,omitempty"`
}

func (x *Theme) Reset() {
	*x = Theme{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_mall_app_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Theme) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Theme) ProtoMessage() {}

func (x *Theme) ProtoReflect() protoreflect.Message {
	mi := &file_api_mall_app_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Theme.ProtoReflect.Descriptor instead.
func (*Theme) Descriptor() ([]byte, []int) {
	return file_api_mall_app_proto_rawDescGZIP(), []int{5}
}

func (x *Theme) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Theme) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Theme) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Theme) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Theme) GetEntranceImg() string {
	if x != nil {
		return x.EntranceImg
	}
	return ""
}

func (x *Theme) GetInternalTopImg() string {
	if x != nil {
		return x.InternalTopImg
	}
	return ""
}

func (x *Theme) GetTitleImg() string {
	if x != nil {
		return x.TitleImg
	}
	return ""
}

func (x *Theme) GetTplName() string {
	if x != nil {
		return x.TplName
	}
	return ""
}

func (x *Theme) GetOnline() int32 {
	if x != nil {
		return x.Online
	}
	return 0
}

type ThemeSpu struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Title          string `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Description    string `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	Name           string `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	EntranceImg    string `protobuf:"bytes,5,opt,name=entrance_img,json=entranceImg,proto3" json:"entrance_img,omitempty"`
	InternalTopImg string `protobuf:"bytes,7,opt,name=internal_top_img,json=internalTopImg,proto3" json:"internal_top_img,omitempty"`
	TitleImg       string `protobuf:"bytes,8,opt,name=title_img,json=titleImg,proto3" json:"title_img,omitempty"`
	TplName        string `protobuf:"bytes,9,opt,name=tpl_name,json=tplName,proto3" json:"tpl_name,omitempty"`
	Online         int32  `protobuf:"varint,10,opt,name=online,proto3" json:"online,omitempty"`
	SpuList        []*Spu `protobuf:"bytes,11,rep,name=spu_list,json=spuList,proto3" json:"spu_list,omitempty"`
}

func (x *ThemeSpu) Reset() {
	*x = ThemeSpu{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_mall_app_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ThemeSpu) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ThemeSpu) ProtoMessage() {}

func (x *ThemeSpu) ProtoReflect() protoreflect.Message {
	mi := &file_api_mall_app_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ThemeSpu.ProtoReflect.Descriptor instead.
func (*ThemeSpu) Descriptor() ([]byte, []int) {
	return file_api_mall_app_proto_rawDescGZIP(), []int{6}
}

func (x *ThemeSpu) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ThemeSpu) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *ThemeSpu) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *ThemeSpu) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ThemeSpu) GetEntranceImg() string {
	if x != nil {
		return x.EntranceImg
	}
	return ""
}

func (x *ThemeSpu) GetInternalTopImg() string {
	if x != nil {
		return x.InternalTopImg
	}
	return ""
}

func (x *ThemeSpu) GetTitleImg() string {
	if x != nil {
		return x.TitleImg
	}
	return ""
}

func (x *ThemeSpu) GetTplName() string {
	if x != nil {
		return x.TplName
	}
	return ""
}

func (x *ThemeSpu) GetOnline() int32 {
	if x != nil {
		return x.Online
	}
	return 0
}

func (x *ThemeSpu) GetSpuList() []*Spu {
	if x != nil {
		return x.SpuList
	}
	return nil
}

type Banner struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          int64         `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name        string        `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Title       string        `protobuf:"bytes,3,opt,name=title,proto3" json:"title,omitempty"`
	Img         string        `protobuf:"bytes,4,opt,name=img,proto3" json:"img,omitempty"`
	Description string        `protobuf:"bytes,5,opt,name=description,proto3" json:"description,omitempty"`
	Items       []*BannerItem `protobuf:"bytes,6,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *Banner) Reset() {
	*x = Banner{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_mall_app_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Banner) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Banner) ProtoMessage() {}

func (x *Banner) ProtoReflect() protoreflect.Message {
	mi := &file_api_mall_app_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Banner.ProtoReflect.Descriptor instead.
func (*Banner) Descriptor() ([]byte, []int) {
	return file_api_mall_app_proto_rawDescGZIP(), []int{7}
}

func (x *Banner) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Banner) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Banner) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Banner) GetImg() string {
	if x != nil {
		return x.Img
	}
	return ""
}

func (x *Banner) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Banner) GetItems() []*BannerItem {
	if x != nil {
		return x.Items
	}
	return nil
}

type BannerItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Img      string `protobuf:"bytes,2,opt,name=img,proto3" json:"img,omitempty"`
	Keyword  string `protobuf:"bytes,3,opt,name=keyword,proto3" json:"keyword,omitempty"`
	Type     int32  `protobuf:"varint,4,opt,name=type,proto3" json:"type,omitempty"`
	Name     string `protobuf:"bytes,5,opt,name=name,proto3" json:"name,omitempty"`
	BannerId int64  `protobuf:"varint,6,opt,name=bannerId,proto3" json:"bannerId,omitempty"`
}

func (x *BannerItem) Reset() {
	*x = BannerItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_mall_app_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BannerItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BannerItem) ProtoMessage() {}

func (x *BannerItem) ProtoReflect() protoreflect.Message {
	mi := &file_api_mall_app_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BannerItem.ProtoReflect.Descriptor instead.
func (*BannerItem) Descriptor() ([]byte, []int) {
	return file_api_mall_app_proto_rawDescGZIP(), []int{8}
}

func (x *BannerItem) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *BannerItem) GetImg() string {
	if x != nil {
		return x.Img
	}
	return ""
}

func (x *BannerItem) GetKeyword() string {
	if x != nil {
		return x.Keyword
	}
	return ""
}

func (x *BannerItem) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *BannerItem) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *BannerItem) GetBannerId() int64 {
	if x != nil {
		return x.BannerId
	}
	return 0
}

type Spu struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Title          string `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Subtitle       string `protobuf:"bytes,3,opt,name=subtitle,proto3" json:"subtitle,omitempty"`
	CategoryId     int64  `protobuf:"varint,4,opt,name=category_id,json=categoryId,proto3" json:"category_id,omitempty"`
	RootCategoryId int64  `protobuf:"varint,5,opt,name=root_category_id,json=rootCategoryId,proto3" json:"root_category_id,omitempty"`
	Price          string `protobuf:"bytes,6,opt,name=price,proto3" json:"price,omitempty"`
	Img            string `protobuf:"bytes,7,opt,name=img,proto3" json:"img,omitempty"`
	ForThemeImg    string `protobuf:"bytes,8,opt,name=for_theme_img,json=forThemeImg,proto3" json:"for_theme_img,omitempty"`
	Description    string `protobuf:"bytes,9,opt,name=description,proto3" json:"description,omitempty"`
	DiscountPrice  string `protobuf:"bytes,10,opt,name=discount_price,json=discountPrice,proto3" json:"discount_price,omitempty"`
	Tags           string `protobuf:"bytes,11,opt,name=tags,proto3" json:"tags,omitempty"`
	Online         int32  `protobuf:"varint,13,opt,name=online,proto3" json:"online,omitempty"`
}

func (x *Spu) Reset() {
	*x = Spu{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_mall_app_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Spu) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Spu) ProtoMessage() {}

func (x *Spu) ProtoReflect() protoreflect.Message {
	mi := &file_api_mall_app_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Spu.ProtoReflect.Descriptor instead.
func (*Spu) Descriptor() ([]byte, []int) {
	return file_api_mall_app_proto_rawDescGZIP(), []int{9}
}

func (x *Spu) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Spu) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Spu) GetSubtitle() string {
	if x != nil {
		return x.Subtitle
	}
	return ""
}

func (x *Spu) GetCategoryId() int64 {
	if x != nil {
		return x.CategoryId
	}
	return 0
}

func (x *Spu) GetRootCategoryId() int64 {
	if x != nil {
		return x.RootCategoryId
	}
	return 0
}

func (x *Spu) GetPrice() string {
	if x != nil {
		return x.Price
	}
	return ""
}

func (x *Spu) GetImg() string {
	if x != nil {
		return x.Img
	}
	return ""
}

func (x *Spu) GetForThemeImg() string {
	if x != nil {
		return x.ForThemeImg
	}
	return ""
}

func (x *Spu) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Spu) GetDiscountPrice() string {
	if x != nil {
		return x.DiscountPrice
	}
	return ""
}

func (x *Spu) GetTags() string {
	if x != nil {
		return x.Tags
	}
	return ""
}

func (x *Spu) GetOnline() int32 {
	if x != nil {
		return x.Online
	}
	return 0
}

var File_api_mall_app_proto protoreflect.FileDescriptor

var file_api_mall_app_proto_rawDesc = []byte{
	0x0a, 0x12, 0x61, 0x70, 0x69, 0x2f, 0x6d, 0x61, 0x6c, 0x6c, 0x2f, 0x61, 0x70, 0x70, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x04, 0x6d, 0x61, 0x6c, 0x6c, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x15, 0x61, 0x70, 0x69, 0x2f, 0x6d, 0x61, 0x6c, 0x6c, 0x2f,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x23, 0x0a, 0x11,
	0x42, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69,
	0x64, 0x22, 0x29, 0x0a, 0x13, 0x42, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x42, 0x79, 0x4e, 0x61, 0x6d,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x2b, 0x0a, 0x13,
	0x54, 0x68, 0x65, 0x6d, 0x65, 0x42, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x22, 0x29, 0x0a, 0x13, 0x54, 0x68, 0x65,
	0x6d, 0x65, 0x57, 0x69, 0x74, 0x68, 0x53, 0x70, 0x75, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x22, 0x2b, 0x0a, 0x06, 0x54, 0x68, 0x65, 0x6d, 0x65, 0x73, 0x12, 0x21,
	0x0a, 0x05, 0x74, 0x68, 0x65, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0b, 0x2e,
	0x6d, 0x61, 0x6c, 0x6c, 0x2e, 0x54, 0x68, 0x65, 0x6d, 0x65, 0x52, 0x05, 0x74, 0x68, 0x65, 0x6d,
	0x65, 0x22, 0x80, 0x02, 0x0a, 0x05, 0x54, 0x68, 0x65, 0x6d, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74,
	0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c,
	0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x65, 0x6e, 0x74, 0x72, 0x61,
	0x6e, 0x63, 0x65, 0x5f, 0x69, 0x6d, 0x67, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x65,
	0x6e, 0x74, 0x72, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x6d, 0x67, 0x12, 0x28, 0x0a, 0x10, 0x69, 0x6e,
	0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x5f, 0x74, 0x6f, 0x70, 0x5f, 0x69, 0x6d, 0x67, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x54, 0x6f,
	0x70, 0x49, 0x6d, 0x67, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x5f, 0x69, 0x6d,
	0x67, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x49, 0x6d,
	0x67, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x70, 0x6c, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x70, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x6f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6f, 0x6e,
	0x6c, 0x69, 0x6e, 0x65, 0x22, 0xa9, 0x02, 0x0a, 0x08, 0x54, 0x68, 0x65, 0x6d, 0x65, 0x53, 0x70,
	0x75, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x21, 0x0a,
	0x0c, 0x65, 0x6e, 0x74, 0x72, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x69, 0x6d, 0x67, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x65, 0x6e, 0x74, 0x72, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x6d, 0x67,
	0x12, 0x28, 0x0a, 0x10, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x5f, 0x74, 0x6f, 0x70,
	0x5f, 0x69, 0x6d, 0x67, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x69, 0x6e, 0x74, 0x65,
	0x72, 0x6e, 0x61, 0x6c, 0x54, 0x6f, 0x70, 0x49, 0x6d, 0x67, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x69,
	0x74, 0x6c, 0x65, 0x5f, 0x69, 0x6d, 0x67, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74,
	0x69, 0x74, 0x6c, 0x65, 0x49, 0x6d, 0x67, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x70, 0x6c, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x70, 0x6c, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x06, 0x6f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x12, 0x24, 0x0a, 0x08, 0x73, 0x70,
	0x75, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x6d,
	0x61, 0x6c, 0x6c, 0x2e, 0x53, 0x70, 0x75, 0x52, 0x07, 0x73, 0x70, 0x75, 0x4c, 0x69, 0x73, 0x74,
	0x22, 0x9e, 0x01, 0x0a, 0x06, 0x42, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x6d, 0x67, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x69, 0x6d, 0x67, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x26, 0x0a, 0x05, 0x69, 0x74, 0x65,
	0x6d, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x6d, 0x61, 0x6c, 0x6c, 0x2e,
	0x42, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d,
	0x73, 0x22, 0x8c, 0x01, 0x0a, 0x0a, 0x42, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x49, 0x74, 0x65, 0x6d,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x10, 0x0a, 0x03, 0x69, 0x6d, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x69,
	0x6d, 0x67, 0x12, 0x18, 0x0a, 0x07, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x12, 0x0a, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x62, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x49, 0x64,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x62, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x49, 0x64,
	0x22, 0xd3, 0x02, 0x0a, 0x03, 0x53, 0x70, 0x75, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x1a,
	0x0a, 0x08, 0x73, 0x75, 0x62, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x73, 0x75, 0x62, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x61,
	0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0a, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x12, 0x28, 0x0a, 0x10, 0x72,
	0x6f, 0x6f, 0x74, 0x5f, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x5f, 0x69, 0x64, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x72, 0x6f, 0x6f, 0x74, 0x43, 0x61, 0x74, 0x65, 0x67,
	0x6f, 0x72, 0x79, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x69,
	0x6d, 0x67, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x69, 0x6d, 0x67, 0x12, 0x22, 0x0a,
	0x0d, 0x66, 0x6f, 0x72, 0x5f, 0x74, 0x68, 0x65, 0x6d, 0x65, 0x5f, 0x69, 0x6d, 0x67, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x66, 0x6f, 0x72, 0x54, 0x68, 0x65, 0x6d, 0x65, 0x49, 0x6d,
	0x67, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x25, 0x0a, 0x0e, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f,
	0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x64, 0x69, 0x73,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x61,
	0x67, 0x73, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x61, 0x67, 0x73, 0x12, 0x16,
	0x0a, 0x06, 0x6f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06,
	0x6f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x32, 0xe7, 0x02, 0x0a, 0x03, 0x41, 0x70, 0x70, 0x12, 0x4f,
	0x0a, 0x0d, 0x47, 0x65, 0x74, 0x42, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x42, 0x79, 0x49, 0x64, 0x12,
	0x17, 0x2e, 0x6d, 0x61, 0x6c, 0x6c, 0x2e, 0x42, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x42, 0x79, 0x49,
	0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0c, 0x2e, 0x6d, 0x61, 0x6c, 0x6c, 0x2e,
	0x42, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x22, 0x17, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x11, 0x12, 0x0f,
	0x2f, 0x62, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x2f, 0x69, 0x64, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x12,
	0x57, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x42, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x42, 0x79, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x19, 0x2e, 0x6d, 0x61, 0x6c, 0x6c, 0x2e, 0x42, 0x61, 0x6e, 0x6e, 0x65, 0x72,
	0x42, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0c, 0x2e,
	0x6d, 0x61, 0x6c, 0x6c, 0x2e, 0x42, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x22, 0x1b, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x15, 0x12, 0x13, 0x2f, 0x62, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x2f, 0x6e, 0x61, 0x6d,
	0x65, 0x2f, 0x7b, 0x6e, 0x61, 0x6d, 0x65, 0x7d, 0x12, 0x53, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x54,
	0x68, 0x65, 0x6d, 0x65, 0x42, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x12, 0x19, 0x2e, 0x6d, 0x61,
	0x6c, 0x6c, 0x2e, 0x54, 0x68, 0x65, 0x6d, 0x65, 0x42, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0c, 0x2e, 0x6d, 0x61, 0x6c, 0x6c, 0x2e, 0x54, 0x68,
	0x65, 0x6d, 0x65, 0x73, 0x22, 0x17, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x11, 0x12, 0x0f, 0x2f, 0x74,
	0x68, 0x65, 0x6d, 0x65, 0x2f, 0x62, 0x79, 0x2f, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x12, 0x61, 0x0a,
	0x0f, 0x47, 0x65, 0x74, 0x54, 0x68, 0x65, 0x6d, 0x65, 0x57, 0x69, 0x74, 0x68, 0x53, 0x70, 0x75,
	0x12, 0x19, 0x2e, 0x6d, 0x61, 0x6c, 0x6c, 0x2e, 0x54, 0x68, 0x65, 0x6d, 0x65, 0x57, 0x69, 0x74,
	0x68, 0x53, 0x70, 0x75, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0e, 0x2e, 0x6d, 0x61,
	0x6c, 0x6c, 0x2e, 0x54, 0x68, 0x65, 0x6d, 0x65, 0x53, 0x70, 0x75, 0x22, 0x23, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x1d, 0x12, 0x1b, 0x2f, 0x74, 0x68, 0x65, 0x6d, 0x65, 0x2f, 0x6e, 0x61, 0x6d, 0x65,
	0x2f, 0x7b, 0x6e, 0x61, 0x6d, 0x65, 0x7d, 0x2f, 0x77, 0x69, 0x74, 0x68, 0x5f, 0x73, 0x70, 0x75,
	0x42, 0x12, 0x5a, 0x10, 0x6d, 0x61, 0x6c, 0x6c, 0x2d, 0x67, 0x6f, 0x2f, 0x61, 0x70, 0x69, 0x2f,
	0x6d, 0x61, 0x6c, 0x6c, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_api_mall_app_proto_rawDescOnce sync.Once
	file_api_mall_app_proto_rawDescData = file_api_mall_app_proto_rawDesc
)

func file_api_mall_app_proto_rawDescGZIP() []byte {
	file_api_mall_app_proto_rawDescOnce.Do(func() {
		file_api_mall_app_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_mall_app_proto_rawDescData)
	})
	return file_api_mall_app_proto_rawDescData
}

var file_api_mall_app_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_api_mall_app_proto_goTypes = []interface{}{
	(*BannerByIdRequest)(nil),   // 0: mall.BannerByIdRequest
	(*BannerByNameRequest)(nil), // 1: mall.BannerByNameRequest
	(*ThemeByNamesRequest)(nil), // 2: mall.ThemeByNamesRequest
	(*ThemeWithSpuRequest)(nil), // 3: mall.ThemeWithSpuRequest
	(*Themes)(nil),              // 4: mall.Themes
	(*Theme)(nil),               // 5: mall.Theme
	(*ThemeSpu)(nil),            // 6: mall.ThemeSpu
	(*Banner)(nil),              // 7: mall.Banner
	(*BannerItem)(nil),          // 8: mall.BannerItem
	(*Spu)(nil),                 // 9: mall.Spu
}
var file_api_mall_app_proto_depIdxs = []int32{
	5, // 0: mall.Themes.theme:type_name -> mall.Theme
	9, // 1: mall.ThemeSpu.spu_list:type_name -> mall.Spu
	8, // 2: mall.Banner.items:type_name -> mall.BannerItem
	0, // 3: mall.App.GetBannerById:input_type -> mall.BannerByIdRequest
	1, // 4: mall.App.GetBannerByName:input_type -> mall.BannerByNameRequest
	2, // 5: mall.App.GetThemeByNames:input_type -> mall.ThemeByNamesRequest
	3, // 6: mall.App.GetThemeWithSpu:input_type -> mall.ThemeWithSpuRequest
	7, // 7: mall.App.GetBannerById:output_type -> mall.Banner
	7, // 8: mall.App.GetBannerByName:output_type -> mall.Banner
	4, // 9: mall.App.GetThemeByNames:output_type -> mall.Themes
	6, // 10: mall.App.GetThemeWithSpu:output_type -> mall.ThemeSpu
	7, // [7:11] is the sub-list for method output_type
	3, // [3:7] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_api_mall_app_proto_init() }
func file_api_mall_app_proto_init() {
	if File_api_mall_app_proto != nil {
		return
	}
	file_api_mall_common_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_api_mall_app_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BannerByIdRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_mall_app_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BannerByNameRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_mall_app_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ThemeByNamesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_mall_app_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ThemeWithSpuRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_mall_app_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Themes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_mall_app_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Theme); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_mall_app_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ThemeSpu); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_mall_app_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Banner); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_mall_app_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BannerItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_mall_app_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Spu); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_mall_app_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_mall_app_proto_goTypes,
		DependencyIndexes: file_api_mall_app_proto_depIdxs,
		MessageInfos:      file_api_mall_app_proto_msgTypes,
	}.Build()
	File_api_mall_app_proto = out.File
	file_api_mall_app_proto_rawDesc = nil
	file_api_mall_app_proto_goTypes = nil
	file_api_mall_app_proto_depIdxs = nil
}
