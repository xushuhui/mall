syntax = "proto3";

package mall;

import "google/api/annotations.proto";
import "google/protobuf/empty.proto";



option go_package = "mall-go/api/mall";

service Interface {

  rpc GetBannerById(BannerByIdRequest) returns (Banner) {
    option (google.api.http) = {
      get : "/banner/id/{id}"
    };
  }
  rpc GetBannerByName(BannerByNameRequest) returns (Banner) {
    option (google.api.http) = {
      get : "/banner/name/{name}"
    };
  }
  rpc GetThemeByNames(ThemeByNamesRequest) returns (Themes) {
    option (google.api.http) = {
      get : "/theme/by/names"
    };
  }
  //
  rpc GetThemeWithSpu(ThemeWithSpuRequest) returns (ThemeSpu) {
    option (google.api.http) = {
      get : "/theme/name/{name}/with_spu"
    };
  }
  rpc GetActivityByName(ActivityByNameRequest) returns (Activity) {
    option (google.api.http) = {
      get : "/activity/name/{name}"
    };
  }
  rpc GetActivityWithCoupon(ActivityWithCouponRequest)
      returns (ActivityCoupon) {
    option (google.api.http) = {
      get : "/activity/name/{name}/with_coupon"
    };
  }

  rpc GetAllCategory(google.protobuf.Empty) returns (AllCategory) {
    option (google.api.http) = {
      get : "/category/all"
    };
  }
  rpc GetGridCategory(google.protobuf.Empty) returns (GridCategories) {
    option (google.api.http) = {
      get : "/category/grid/all"
    };
  }

  rpc GetTagByType(TagByTypeRequest) returns (Tags) {
    option (google.api.http) = {
      get : "/tag/type/{type}"
    };
  }
  rpc GetCouponByCategory(CouponByCategoryRequest) returns (Coupons) {
    option (google.api.http) = {
      get : "/coupon/by/category/{id}"
    };
  }
  rpc GetWholeCoupon(google.protobuf.Empty) returns (Coupons) {
    option (google.api.http) = {
      get : "/coupon/by/whole_store"
    };
  }
  rpc GetMyCouponByStatus(MyCouponByStatusRequest) returns (Coupons) {
    option (google.api.http) = {
      get : "/coupon/myself/by/status/{status}"
    };
  }
  rpc GetMyAvailableCoupon(google.protobuf.Empty) returns (Coupons) {
    option (google.api.http) = {
      get : "/coupon/myself/available/with_category"
    };
  }
  rpc CollectCoupon(CollectCouponRequest) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      post : "/coupon/collect/{id}"
      body : "*"
    };
  }
  rpc GetSaleExplain(google.protobuf.Empty) returns (SaleExplains) {
    option (google.api.http) = {
      get : "/sale_explain/fixed"
    };
  }
  rpc Search(SearchRequest) returns (SpuPage) {
    option (google.api.http) = {
      get : "/search"
    };
  }
  rpc GetSpuById(SpuByIdRequest) returns (SpuDetail) {
    option (google.api.http) = {
      get : "/spu/id/{id}/detail"
    };
  }
  rpc GetSpuLatest(google.protobuf.Empty) returns (SpuPage) {
    option (google.api.http) = {
      get : "/spu/latest"
    };
  }
  rpc GetSpuByCategory(SpuByCategoryRequest) returns (SpuPage) {
    option (google.api.http) = {
      get : "/spu/by/category/{id}"
    };
  }
  rpc MiniappLogin(MiniappLoginRequest) returns (LoginReply) {
    option (google.api.http) = {
      post : "/login/miniapp"
      body : "*"
    };
  }
  rpc VerifyToken(VerifyTokenRequest) returns (VerifyTokenReply) {
    option (google.api.http) = {
      post : "/verify"
      body : "*"
    };
  }
  rpc UpdateInfo(UpdateInfoRequest) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      put : "/info"
      body : "*"
    };
  }
  rpc Charge(ChargeRequest) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      post : "/charge"
      body : "*"
    };
  }
  rpc CreateAddress(CreateAddressRequest) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      post : "/address"
      body : "*"
    };
  }
  rpc ListAddress(CreateAddressRequest) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      get : "/addresses"

    };
  }
  rpc GetAddress(GetAddressRequest) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      get : "/address/{id}"

    };
  }
  rpc SetDefaultAddr(SetDefaultAddrRequest) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      put : "/address/{id}/default"
      body : "*"
    };
  }
  rpc DeleteAddress(DeleteAddressRequest) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      delete : "/address/{id}"

    };
  }
}
message PageReply {
  int32 total = 1;
  int32 page = 3;
  int32 count = 4;
}
message PageRequest {

  int32 page = 3;
  int32 count = 4;
}
message Banner {
  int64 id = 1;
  string name = 2;
  string title = 3;
  string img = 4;
  string description = 5;
  repeated BannerItem items = 6;
}
message BannerItem {
  int64 id = 1;
  string img = 2;
  string keyword = 3;
  int32 type = 4;
  string name = 5;
  int64 bannerId = 6;
}
message BannerByIdRequest { int64 id = 1; }
message BannerByNameRequest { string name = 1; }
message ThemeByNamesRequest { string names = 1; }
message ThemeWithSpuRequest { string name = 1; }
message ActivityByNameRequest { string name = 1; }
message ActivityWithCouponRequest { string name = 1; }
message Themes { repeated Theme theme = 1; }
message Theme {
  int64 id = 1;
  string title = 2;
  string description = 3;
  string name = 4;
  string entrance_img = 5;

  string internal_top_img = 7;
  string title_img = 8;
  string tpl_name = 9;
  int32 online = 10;
}
message ThemeSpu {
  int64 id = 1;
  string title = 2;
  string description = 3;
  string name = 4;
  string entrance_img = 5;

  string internal_top_img = 7;
  string title_img = 8;
  string tpl_name = 9;
  int32 online = 10;
  repeated Spu spu_list = 11;
}
message Spu {
  int64 id = 1;
  string title = 2;
  string subtitle = 3;
  int64 category_id = 4;
  int64 root_category_id = 5;
  string price = 6;
  string img = 7;
  string for_theme_img = 8;
  string description = 9;
  string discount_price = 10;
  string tags = 11;
  int32 online = 13;
}
message TagByTypeRequest { string type = 1; }

message Tags {
  message Tag {
    int64 id = 1;
    string title = 2;
    uint32 highlight = 3;
    string description = 4;
    uint32 type = 5;
  }
  repeated Tag tag = 1;
}
message GridCategories {
  message GridCategory {
    int64 id = 1;
    string name = 2;
    string title = 3;
    string img = 4;
    int64 categoryId = 5;
    int64 rootCategoryId = 6;
  }
  repeated GridCategory category = 1;
}
message AllCategory {
  repeated Category roots = 1;
  repeated Category subs = 2;
}
message Category {
  int64 id = 1;
  string name = 2;
  bool is_root = 3;
  string img = 4;
  int64 parent_id = 5;
  int32 index = 6;
}

message Activity {
  int64 id = 1;
  string title = 2;
  string entrance_img = 3;
  int32 online = 4;
  string remark = 5;
  int64 start_time = 6;
  int64 end_time = 7;
}
message ActivityCoupon {
  int64 id = 1;
  string title = 2;
  string entrance_img = 3;
  int32 online = 4;
  string remark = 5;
  int64 start_time = 6;
  int64 end_time = 7;
  repeated CouponBo coupon = 8;
}
message CouponByCategoryRequest { int64 id = 1; }
message MyCouponByStatusRequest { string status = 1; }
message CollectCouponRequest { string id = 1; }

message Coupons { repeated CouponBo coupon = 1; }
message CouponBo {
  int64 id = 1;
  string title = 2;
  int64 start_time = 3;
  int64 end_time = 4;
  string description = 5;
  double full_money = 6;
  double minus = 7;
  double rate = 8;
  int32 type = 9;
  string remark = 10;
  int32 whole_store = 11;
}

message CancelOrderRequest { int64 id = 1; }
message GetOrderRequest { int64 id = 1; }
message SkuInfo {
  int64 id = 1;
  int32 count = 2;
}

message OrderAddress {
  string UserName = 1;
  string Province = 2;
  string City = 3;
  string County = 4;
  string Mobile = 5;
  string NationCode = 6;
  string PostalCode = 7;
  string Detail = 8;
}

message PlaceOrderRequest {
  int64 CouponId = 1;
  double TotalPrice = 2;
  double FinalTotalPrice = 3;
  repeated SkuInfo SkuInfoList = 4;
  OrderAddress Address = 5;
}

message PlaceOrderReply { int64 orderId = 1; }
message ListUserOrdersRequest {
  PageRequest page = 1;
  int32 Status = 3;
}
message ListUserOrdersReply {
  PageReply PageReply = 1;
  int32 Status = 3;
}
message SearchRequest {
  string keyword = 1;
  int32 page = 2;
  int32 size = 3;
}

message SpuByIdRequest { int64 id = 1; }
message SpuByCategoryRequest { int64 id = 1; }
message SpuDetail {
  message Specs {
    uint32 key_id = 1;
    string key = 2;
    uint32 value_id = 3;
    string value = 4;
  }

  message SkuList {
    int64 id = 1;
    double price = 2;
    double discount_price = 3;
    bool online = 4;
    string img = 5;
    string title = 6;
    int64 spu_id = 7;
    int64 category_id = 8;
    int64 root_category_id = 9;
    repeated Specs specs = 10;
    string code = 11;
    uint32 stock = 12;
  }

  message SpuImgList {
    int64 id = 1;
    string img = 2;
    int64 spu_id = 3;
  }

  message SpuDetailImgList {
    int64 id = 1;
    string img = 2;
    int64 spu_id = 3;
    uint32 index = 4;
  }

  int64 id = 1;
  string title = 2;
  string subtitle = 3;
  int64 category_id = 4;
  int64 root_category_id = 5;
  string price = 6;
  string img = 7;
  string for_theme_img = 8;
  string description = 9;
  string discount_price = 10;
  string tags = 11;
  int32 online = 13;
  repeated SkuList sku_list = 14;
  repeated SpuImgList spu_img_list = 15;
  repeated SpuDetailImgList spu_detail_img_list = 16;
  int64 sketch_spec_id = 17;
  int64 default_sku_id = 18;
}

message SpuPage {

  message Items {
    int64 id = 1;
    string title = 2;
    string subtitle = 3;
    string img = 4;
    string for_theme_img = 5;
    string price = 6;
    string discount_price = 7;
    string description = 8;
    string tags = 9;
    string sketch_spec_id = 10;
    uint32 max_purchase_quantity = 11;
    uint32 min_purchase_quantity = 12;
  }

  uint32 total = 1;
  uint32 count = 2;
  uint32 page = 3;
  uint32 total_page = 4;
  repeated Items items = 5;
}
message SaleExplains {
  message SaleExplain {
    int64 id = 1;
    bool fixed = 2;
    string text = 3;
    int64 spu_id = 4;
    int32 index = 5;
    int64 replace_id = 6;
  }
  repeated SaleExplain sale_explain = 1;
}
message LoginRequest{
  string account=1;
  string password=2;
}
message MiniappLoginRequest{
  string code=1;

}
message VerifyTokenRequest{
  string token = 1;
}
message UpdateInfoRequest{

}
message VerifyTokenReply{
  bool isValid = 1;
}
message LoginReply{
  string token = 1;
}
message ChargeRequest{
  int64 amount = 2;
  int32 payWay=1;
}
message CreateAddressRequest{

}
message DeleteAddressRequest{
  int64 id=1;
}
message GetAddressRequest{
  int64 id=1;
}
message SetDefaultAddrRequest{
  int64 id=1;
}