syntax = "proto3";

package payment.service;

import "google/api/annotations.proto";

option go_package = "mall-go/api/payment/service";

service WechatPay {
  
  rpc Mp(MpRequest) returns (MpReply) {
    option (google.api.http) = {
      post : "/mp"
      body : "*"
    };
  }
  rpc Mini(MpRequest) returns (MpReply) {
    option (google.api.http) = {
      post : "/mini"
      body : "*"
    };
  }
  rpc App(AppRequest) returns (AppReply) {
    option (google.api.http) = {
      post : "/app"
      body : "*"
    };
  }
  rpc Scan(ScanRequest) returns (ScanReply) {
    option (google.api.http) = {
      post : "/scan"
      body : "*"
    };
  }
  rpc Query(QueryRequest) returns (QueryReply) {
    option (google.api.http) = {
      post : "/query"
      body : "*"
    };
  }
  rpc QueryRefund(QueryRefundRequest) returns (QueryRefundReply) {
    option (google.api.http) = {
      post : "/query/refund"
      body : "*"
    };
  }

  rpc Refund(RefundRequest) returns (RefundReply) {
    option (google.api.http) = {
      post : "/refund"
      body : "*"
    };
  }
  rpc Notify (NotifyRequest) returns (NotifyReply) {
    option (google.api.http) = {
        post: "/notify"
        body: "*"
    };
}
  rpc NotifyRefund (NotifyRefundRequest) returns (NotifyRefundReply) {
    option (google.api.http) = {
        post: "/notify/refund"
        body: "*"
    };
}
}

message MpRequest {
  string out_trade_no = 2;
}
message MpReply {}
message MiniRequest {
  string out_trade_no = 2;
}
message MiniReply {}
message ScanRequest {}
message ScanReply {}
message AppRequest {}
message AppReply {}
message QueryRequest {
  string transaction_id = 1;
  string out_trade_no = 2;
  
}
message QueryReply {}
message QueryRefundRequest {}
message QueryRefundReply {}
message RefundRequest {}
message RefundReply {}
message NotifyRequest {}
message NotifyReply {}
message NotifyRefundRequest {}
message NotifyRefundReply {}